var
  //Main
  MyForm : TCLForm;
  clPageControl : TCLPageControl;
  clPageControlContainer : TClPageControlContainer;
  refreshTimer : TCLTimer;
  Qry : TclSQLQuery;
  renk_listBG, renk_listkart, renk_formBG, renk_P0Y, renk_P0B1, renk_P0G1, renk_P0G2, renk_P0G3, renk_P1G1, renk_P1B1, renk_P2G1, renk_P2G2, renk_grid: String;
  
  //Page0 
  PnlPage0, PnlPage0Sol, PnlPage0orta, PnlOzetBilgi_P0 : TclProPanel;
  listTopMusteri, ListTopUrun : TClProListView;
  DPtopMusteri : TClProListViewDesignerPanel;
  zamanChart, bolgeAnalizChart, zamanSatisChart : TCLChart;
  PnlMaxMusteri, PnlBolgeAnalizi, PnlZamanSatisChart, PnlZamanChart : TclProPanel;
  PnlToplamSatis, PnlToplamMusteriSayi, PnlToplamSiparis : TclProPanel;
  LblToplamSatis, LblToplamMusteri, LblToplamSiparis :TClProLabel;
  LblMusteriAd, LblMusteriSiparis, LblMusteriRecord, LblTopMusteri : TClProLabel;
  LblZamanBaslik, LblBolgeAnalizBaslik, LblSatisBaslik : TClProLabel;
  cbZaman, cbBolge, cbSatis : TCLComboBox;
  MarginDeger : Integer;
  Page0_ScrollBox : TclVertScrollBox;
  
  //Page1
  PnlPage1, PnlPage1Sag, PnlOzetBilgi_P1 : TclProPanel;
  PnlToplamMusteri, PnlZamanMusteriChart : TclProPanel;
  ListToplamMusteri : TClProListView;
  DPToplamMusteri : TClProListViewDesignerPanel;
  LblMusteriAd1, LblMusteriID, LblMusteriHarcama : TClProLabel;
  zamanMusteriYilChart, zamanMusteriAyChart, zamanMusteriHaftaChart  : TCLChart;
  PnlMusteriSepet, PnlMusteriSiparisSayisi : TclProPanel;
  LblMusteriSepet, LblMusteriSiparisSayisi : TClProLabel;
  LblMusteriSepetDeger, LblMusteriSiparisDeger : TClProLabel;
  BtnMusteriLeft, BtnMusteriRight : TClProButton;
  PnlBtnMusteri : TclProPanel;
  aktifModMusteri : String;
  searchEdtToplamMusteri : TClProSearchEdit;
  cbZamanMusteri :TCLComboBox;
  Page1_ScrollBox : TclVertScrollBox
  
  //Page 1 Müşterileri
  MusteriForm : TCLForm;
  PnlMusteriBilgi : TclProPanel;
  gridMusteriSiparis : TCLProGrid;
  selectedId : UnicodeString;
  cbGridSecim : TCLComboBox;
  
  //PAGE2
  PnlPage2, PnlPage2Sag : TclProPanel;
  PnlToplamUrun, PnlUrunChart, PnlUrunStokChart, PnlUrunStok : TclProPanel;
  ListToplamUrun, ListUrunStok : TClProListView;
  DPToplamUrun, DPUrunStok :TClProListViewDesignerPanel;
  LblUrunRecord, LblUrunSatis, LblUrunAd : TClProLabel;
  BtnUrunLeft, BtnUrunRight, BtnUrunKapat, BtnFilter, BtnFilter2 : TClProButton;
  aktifModUrun,seciliUrunId, UrunId : String;
  pnlFiltre, pnlFiltre2, PnlBtnUrun, pnl_Chk, pnl_Chk2 : TclProPanel;
  searchEdtToplamUrun, searchEdtUrunStok : TClProSearchEdit;
  urunZamanChart, urunStokChart : TCLChart;
  LblUrunZamanBaslik, LblUrunStokBaslik : TClProLabel;
  LblSatilanBaslik, LblStokBaslik : TClProLabel;
  LblStokUrunAd, LblStokUrunMiktar, LblStokUrunId :TClProLabel;
  cbUrunZaman : TCLComboBox;
  Page2_ScrollBox : TclVertScrollBox;
  chkMamul, chkYariMamul, chkHammadde : TCLCheckBox
  chkMamul2, chkYariMamul2, chkHammadde2 : TCLCheckBox


//////////////////////////////////////PAGE0////////////////////////////////////////////

// En çok sipariş veren ilk 10 müşteriyi listeleyen SQL sorgusu
void SQL_TopMusteriler
var
  Qry : TclSQLQuery;
{
  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT TOP 10 ' +
      'Customers.CustomerId AS LblMusteriRecord, ' +
      'Customers.Name AS LblMusteriAd, ' +
      'CAST(SUM(OrderItems.Quantity) AS NVARCHAR) + '' sipariş'' AS LblMusteriSiparis ' +
      'FROM OrderItems ' +
      'JOIN Orders ON Orders.OrderId = OrderItems.OrderId ' +
      'JOIN Customers ON Customers.CustomerId = Orders.CustomerId ' +
      'GROUP BY Customers.CustomerId, Customers.Name ' +
      'ORDER BY SUM(OrderItems.Quantity) DESC'
    );
    
    Qry.Open;
    listTopMusteri.clLoadProListViewDataFromDataset(Qry);
    Qry.Free;
  }
  except
    ShowMessage('SQL Hatası - Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
  }
}

//En çok sipariş veren müşterilerin listview tasarımı
void ListOlustur_TopMusteri
{
  // Liste oluşturuluyor
  listTopMusteri = MyForm.AddNewProListView(PnlMaxMusteri, 'listTopMusteri');
  listTopMusteri.Align = alClient;
  listTopMusteri.clProSettings.ColCount = 1;
  listTopMusteri.clProSettings.ItemSpace = 5;	
  listTopMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listBG);
  listTopMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listBG);
  listTopMusteri.clProSettings.BorderWidth = 1;
  listTopMusteri.clProSettings.RoundWidth = 10;
  listTopMusteri.clProSettings.RoundHeight =10;
  listTopMusteri.SetclProSettings(listTopMusteri.clProSettings);

  // Tasarım paneli
  DPtopMusteri = MyForm.AddNewProListViewDesignerPanel(listTopMusteri, 'DPtopMusteri');
  DPtopMusteri.Height = 150;
  DPtopMusteri.Width = 150;
  DPtopMusteri.Margins.Bottom = 10;
  DPtopMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listkart);
  DPtopMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listkart);
  DPtopMusteri.clProSettings.BorderWidth = 2;
  DPtopMusteri.clProSettings.RoundWidth = 10;
  DPtopMusteri.clProSettings.RoundHeight =10;
  DPtopMusteri.SetclProSettings(DPtopMusteri.clProSettings);
  listTopMusteri.SetDesignerPanel(DPtopMusteri);
  
  // Etiketler
  LblMusteriAd = MyForm.AddNewProLabel(DPtopMusteri, 'LblMusteriAd', 'Ad');
  LblMusteriAd.Align = alTop;
  LblMusteriAd.Margins.Top = 15;
  LblMusteriAd.clProSettings.FontHorzAlign  = palcenter;
  LblMusteriAd.Properties.AutoSize = True;
  LblMusteriAd.SetclProSettings(LblMusteriAd.clProSettings);
  DPtopMusteri.AddPanelObject(LblMusteriAd, clCaption);

  LblMusteriSiparis = MyForm.AddNewProLabel(DPtopMusteri, 'LblMusteriSiparis', 'Adet');
  LblMusteriSiparis.Align = alBottom;
  LblMusteriSiparis.Margins.Left = 20;
  LblMusteriSiparis.Properties.AutoSize = True;
  DPtopMusteri.AddPanelObject(LblMusteriSiparis, clText);
  
  LblMusteriRecord = MyForm.AddNewProLabel(DPtopMusteri, 'LblMusteriRecord', 'Id');
  LblMusteriRecord.Visible = False;
  DPtopMusteri.AddPanelObject(LblMusteriRecord, clText1);
  
  SQL_TopMusteriler;
}

// Yıl bazlı combobox'a veri yükler
void P0_TumComboBoxYillariYukle
var
  yil, sonYil: String;
  i: Integer;
  Qry : TclSQLQuery;
{
  // ComboBox'ları oluştur
  cbSatis = MyForm.AddNewComboBox(PnlZamanSatisChart, 'cbSatis');
  cbZaman = MyForm.AddNewComboBox(PnlZamanChart, 'cbZaman');
  cbBolge = MyForm.AddNewComboBox(PnlBolgeAnalizi, 'cbBolge');

  try
  {
    // SQL'den yıl verilerini çek
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT DISTINCT YEAR(OrderDate) AS Yil ' +
      'FROM Orders ' +
      'ORDER BY Yil DESC'
    );

    Qry.Open;

    while (not Qry.Eof)
    {
      yil = Qry.FieldByName('Yil').AsString;
      cbSatis.AddItem(yil, yil);
      cbZaman.AddItem(yil, yil);
      cbBolge.AddItem(yil, yil);
      Qry.Next;
    }

    // Sistem yılı
    sonYil = FormatDateTime('yyyy', Now);

    // Tüm combobox'lar için geçerli yıl varsa seç
    for i = 0 to cbSatis.Items.Count - 1
    {
      if cbSatis.Items.Strings[i] == sonYil
        cbSatis.ItemIndex = i;

      if cbZaman.Items.Strings[i] == sonYil
        cbZaman.ItemIndex = i;

      if cbBolge.Items.Strings[i] == sonYil
        cbBolge.ItemIndex = i;
    }
  }
  except
    ShowMessage('Yıl ComboBox ları yüklenirken hata: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Combobox'tan seçilen yıla göre aylara göre toplam satış tutarı grafiği
void SQL_AylikSatisChart
  var
  Qry : TclSQLQuery;
  chart : TCLChart;
  lbl : TClProLabel;
  secilenYil : String;
{
  try
  {
    // Önce eski chart ve başlık varsa kaldır
    chart = TCLChart(MyForm.FindComponent('zamanSatisChart'));
    if (chart <> nil)
      chart.Free;

    lbl = TClProLabel(MyForm.FindComponent('LblSatisBaslik'));
    if (lbl <> nil)
      lbl.Free;
      
    // Seçilen yılı combobox’tan al
    secilenYil = cbSatis.Items[cbSatis.ItemIndex];
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'RIGHT(''0'' + CAST(MONTH(Orders.OrderDate) AS VARCHAR), 2) AS Month, ' +
      'ROUND(SUM(OrderItems.Quantity * OrderItems.UnitPrice), 2) AS TotalSales ' +
      'FROM Orders ' +
      'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
      'WHERE YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
      'GROUP BY MONTH(Orders.OrderDate) ' +
      'ORDER BY Month'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      //Yeni Chart oluştur
      chart = MyForm.AddNewChart(PnlZamanSatisChart, 'zamanSatisChart', '');
      chart.Align = alClient;
      chart.Margins.Top = 5;
      chart.Margins.Bottom = 5;
      chart.Margins.Left = 5;
      chart.Margins.Right = 5;

      chart.Charttype = clCBar;
      chart.XAxisText = 'Month';
      chart.ChartItemText = 'Satış Tutarı (₺)';
      chart.ChartItemsValue = 'TotalSales';
      chart.ChartTitle = secilenYil + ' Aylara Göre Toplam Satış Tutarı';

      chart.clLoadDataFromDataSet(Qry);
      
      // Başlık etiketi
      lbl = MyForm.AddNewProLabel(chart, 'LblSatisBaslik', secilenYil + ' Yılı Aylık Satış Tutarı');
      lbl.Align = alTop;
      lbl.Height = 30;
      lbl.Width = 350;
      lbl.clProSettings.FontHorzAlign = palcenter;
      lbl.clProSettings.FontSize = 18;
      lbl.clProSettings.TextSettings.Font.Style = [fsBold];
      lbl.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      lbl.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G1);
      lbl.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G1);
      lbl.clProSettings.BorderWidth = 2;
      lbl.SetclProSettings(lbl.clProSettings);
      clRTMethod(lbl, 'BringToFront');
      clRTMethod(cbSatis, 'BringToFront');
    }
    Qry.Free;
  }
  except
    ShowMessage('SQL_AylikSatisChart hatası: ' + LastExceptionMessage);
  }
}

//Combobox'tan seçilen yıla göre en çok sipariş verilen 5 şehrin pasta grafiği
void SQL_BolgeAnalizi
  var
  Qry : TclSQLQuery;
  chart : TCLChart;
  lbl : TClProLabel;
  secilenYil : String;
{
  try
  {
    // Önce eski chart ve başlık varsa kaldır
    chart = TCLChart(MyForm.FindComponent('bolgeAnalizChart'));
    if (chart <> nil)
      chart.Free;
      
    lbl = TClProLabel(MyForm.FindComponent('LblBolgeAnalizBaslik'));
    if (lbl <> nil)
      lbl.Free;

    // Seçilen yılı combobox’tan al
    secilenYil = cbBolge.Items[cbBolge.ItemIndex];

    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT City AS city, sales, ' +
      '  CASE RowNum ' +
      '    WHEN 1 THEN ''clTomato'' ' +
      '    WHEN 2 THEN ''clGold'' ' +
      '    WHEN 3 THEN ''clPeru'' ' +
      '    WHEN 4 THEN ''clYellow'' ' +
      '    WHEN 5 THEN ''clPink'' ' +
      '  END AS color ' +
      'FROM ( ' +
      '  SELECT City, COUNT(*) AS sales, ' +
      '         ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS RowNum ' +
      '  FROM Orders ' +
      '  JOIN Customers ON Customers.CustomerId = Orders.CustomerId ' +
      '  WHERE YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
      '  GROUP BY City ' +
      ') AS TopCities ' +
      'WHERE RowNum <= 5 ' +
      'UNION ALL ' +
      'SELECT ''Diğer'' AS city, COUNT(*) AS sales, ''clwhite'' AS color ' +
      'FROM ( ' +
      '  SELECT City, COUNT(*) AS sales, ' +
      '         ROW_NUMBER() OVER (ORDER BY COUNT(*) DESC) AS RowNum ' +
      '  FROM Orders ' +
      '  JOIN Customers ON Customers.CustomerId = Orders.CustomerId ' +
      '  WHERE YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
      '  GROUP BY City ' +
      ') AS OtherCities ' +
      'WHERE RowNum > 5'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      // Yeni chart oluştur
      chart = MyForm.AddNewChart(PnlBolgeAnalizi, 'bolgeAnalizChart', '');
      chart.Align = alClient;
      chart.Margins.Top = 5;
      chart.Margins.Bottom = 5;
      chart.Margins.Left = 5;
      chart.Margins.Right = 5;
      chart.Charttype = clCPie;
      chart.XAxisText = 'city';
      chart.ChartItemText = 'Şehir';
      chart.ChartItemsValue = 'sales';
      chart.ChartTitle = secilenYil + ' Şehirlere Göre Sipariş Dağılımı';
      chart.clLoadDataFromDataSet(Qry);

      // Başlık etiketi
      lbl = MyForm.AddNewProLabel(chart, 'LblBolgeAnalizBaslik', secilenYil + ' Yılı Bölge Analizi');
      lbl.Align = alTop;
      lbl.Height = 30;
      lbl.Width = 350;
      lbl.clProSettings.FontHorzAlign = palcenter;
      lbl.clProSettings.FontSize = 18;
      lbl.clProSettings.TextSettings.Font.Style = [fsBold];
      lbl.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      lbl.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G2);
      lbl.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G2);
      lbl.clProSettings.BorderWidth = 2;
      lbl.SetclProSettings(lbl.clProSettings);
      clRTMethod(lbl, 'BringToFront');
      clRTMethod(cbBolge, 'BringToFront');
    }
  }
    Qry.Free;
  except
    ShowMessage('SQL_BolgeAnaliziChart hatası: ' + LastExceptionMessage);
  }
}

//Combobox'tan seçilen yıla göre aylık sipariş sayısı grafiği
void SQL_ZamanChart
  var 
  secilenYil : String;
  Qry : TclSQLQuery;
  chart : TCLChart;
  lbl : TClProLabel;
{
  try
  {
    // Önce varsa eski chart ve başlığı kaldır
    chart = TCLChart(MyForm.FindComponent('zamanChart'));
    if (chart <> nil)
      chart.Free;
    lbl = TClProLabel(MyForm.FindComponent('LblZamanBaslik'));
    if (lbl <> nil)
      lbl.Free;

    // Seçilen yılı al
    secilenYil = cbZaman.Items[cbZaman.ItemIndex];

    // Yeni sorguyu hazırla
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'FORMAT(Orders.OrderDate, ''MM'') AS Month, ' +
      'COUNT(OrderId) AS OrderCount ' +
      'FROM Orders ' +
      'WHERE YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
      'GROUP BY FORMAT(Orders.OrderDate, ''MM'') ' +
      'ORDER BY Month'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      // Chart ekle
      chart = MyForm.AddNewChart(PnlZamanChart, 'zamanChart', '');
      chart.Align = alClient;
      chart.Margins.Top = 5;
      chart.Margins.Bottom = 5;
      chart.Margins.Left = 5;
      chart.Margins.Right = 5;
      chart.Charttype = clCLine;
      chart.XAxisText = 'Month';
      chart.ChartItemText = 'Sipariş';
      chart.ChartItemsValue = 'OrderCount';
      chart.clLoadDataFromDataSet(Qry);

      // Başlık etiketi ekle
      lbl = MyForm.AddNewProLabel(chart, 'LblZamanBaslik', secilenYil + ' Yılı Aylık Sipariş Sayısı');
      lbl.Align = alTop;
      lbl.Height = 30;
      lbl.Width = 350;
      lbl.clProSettings.FontHorzAlign = palcenter;
      lbl.clProSettings.FontSize = 18;
      lbl.clProSettings.TextSettings.Font.Style = [fsBold];
      lbl.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      lbl.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G3);
      lbl.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G3);
      lbl.clProSettings.BorderWidth = 2;
      lbl.SetclProSettings(lbl.clProSettings);
      clRTMethod(lbl, 'BringToFront');
      clRTMethod(cbZaman, 'BringToFront');
    }
  }
  except
    ShowMessage('SQL_ZamanChart hatası: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Toplam satış, müşteri, sipariş bilgileri 
void SQL_P0_OzetBilgiler
   var
  Qry : TclSQLQuery;
{
  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'ROUND(SUM(OrderItems.Quantity * OrderItems.UnitPrice), 2) AS ToplamSatis, ' +
      '(SELECT COUNT(*) FROM Orders) AS ToplamSiparis, ' +
      '(SELECT COUNT(DISTINCT CustomerId) FROM Orders) AS ToplamMusteri ' +
      'FROM OrderItems'
    );
    Qry.Open;

    if not Qry.IsEmpty
    {
      LblToplamSatis.Caption = 'Toplam Satış: ₺' + Qry.FieldByName('ToplamSatis').AsString;
      LblToplamSiparis.Caption = 'Toplam Sipariş: ' + Qry.FieldByName('ToplamSiparis').AsString;
      LblToplamMusteri.Caption = 'Toplam Müşteri: ' + Qry.FieldByName('ToplamMusteri').AsString;
    }
  }
  except
    ShowMessage('SQL Hatası - Exception Class: '+LastExceptionClassName+' Exception Message: '+LastExceptionMessage);
  }
  Qry.Free;
}

//Panellerin boyutunu ayarlar
void P0_OnPageResize;
{
  PnlPage0Sol.Width = (PnlPage0.Width * 39) / 100;
  PnlPage0Sol.Height = (PnlPage0.Height*95)/100;
  PnlPage0orta.Width = (PnlPage0.Width * 35) / 100;
  PnlPage0orta.Height = (PnlPage0.Height*95)/100;
  PnlOzetBilgi_P0.Width = (PnlPage0.Width * 15) / 100;
  PnlPage0orta.Height = (PnlPage0.Height*95)/100;
}

//Mobil ise ScrollBox masaüstü ise tek panelde görünüm
void P0_isMobile
  var
  isMobile : Boolean;
  marginDeger : Integer;
{
  marginDeger = 20;
  isMobile = Clomosy.PlatformIsMobile;
  
  if isMobile
  {
    Page0_ScrollBox = MyForm.AddNewVertScrollBox(PnlPage0,'Page0_ScrollBox');
    Page0_ScrollBox.Align = alClient;
    Page0_ScrollBox.ShowScrollBars = True;
    
    PnlOzetBilgi_P0 = MyForm.AddNewProPanel(Page0_ScrollBox, 'PnlOzetBilgi_P0');
    PnlOzetBilgi_P0.Align = alTop;
    PnlOzetBilgi_P0.Margins.Left = marginDeger;
    PnlOzetBilgi_P0.Margins.Right = marginDeger;

    PnlPage0Sol = MyForm.AddNewProPanel(Page0_ScrollBox, 'PnlPage0Sol');
    PnlPage0Sol.Align = alTop;
    PnlPage0Sol.Height = 800;
    PnlPage0Sol.Margins.Left = marginDeger;
    PnlPage0Sol.Margins.Right = marginDeger;
    PnlPage0Sol.Margins.Top = 200; 

    PnlPage0orta = MyForm.AddNewProPanel(Page0_ScrollBox, 'PnlPage0orta');
    PnlPage0orta.Align = alTop;
    PnlPage0orta.Height = 800;
    PnlPage0orta.Margins.Left = marginDeger;
    PnlPage0orta.Margins.Right = marginDeger;
    PnlPage0orta.Margins.Top = marginDeger; 
    PnlPage0orta.Margins.Bottom = 8000; 
  }
  else
  {
    PnlPage0Sol = MyForm.AddNewProPanel(PnlPage0, 'PnlPage0Sol');
    PnlPage0Sol.Align = alLeft;
    PnlPage0Sol.Margins.Top = marginDeger; 
    PnlPage0Sol.Margins.Bottom = (marginDeger*2); 
    PnlPage0Sol.Margins.Left = (marginDeger*2);
    
    PnlPage0orta = MyForm.AddNewProPanel(PnlPage0, 'PnlPage0orta');
    PnlPage0orta.Align = alLeft;
    PnlPage0orta.Margins.Top = (marginDeger*3); 
    PnlPage0orta.Margins.Bottom = (marginDeger*2); 
    PnlPage0orta.Margins.Left = (marginDeger*2);
    
    PnlOzetBilgi_P0 = MyForm.AddNewProPanel(PnlPage0, 'PnlOzetBilgi_P0');
    PnlOzetBilgi_P0.Align = alLeft;
    PnlOzetBilgi_P0.Margins.Top = (marginDeger*2); 
    PnlOzetBilgi_P0.Margins.Bottom = (marginDeger*2);    
    PnlOzetBilgi_P0.Margins.Left = (marginDeger*2);
  }
}


void Page0
{
  MarginDeger = 20;

  PnlPage0 = MyForm.AddNewProPanel(clPageControl.PageContainers[0],'PnlPage0');
  PnlPage0.Align =alClient;
  PnlPage0.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage0.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage0.clProSettings.BorderWidth = 2;
  PnlPage0.clProSettings.IsTransparent = True;
  PnlPage0.SetclProSettings(PnlPage0.clProSettings);

  PnlPage0.OnResize = 'P0_OnPageResize';
  P0_isMobile;

  LblTopMusteri = MyForm.AddNewProLabel(PnlPage0Sol, 'LblTopMusteri', 'En çok alışveriş yapan müşteriler');
  LblTopMusteri.Align = alTop;
  LblTopMusteri.Height = 30;
  LblTopMusteri.clProSettings.FontSize = 18;
  LblTopMusteri.clProSettings.TextSettings.Font.Style = [fsBold];
  LblTopMusteri.SetclProSettings(LblTopMusteri.clProSettings);

  PnlMaxMusteri = MyForm.AddNewProPanel(PnlPage0Sol, 'PnlMaxMusteri');
  PnlMaxMusteri.Height = 400;
  PnlMaxMusteri.Align = alTop ;
  PnlMaxMusteri.Margins.Top = (MarginDeger/2);
  PnlMaxMusteri.clProSettings.BorderWidth = 2;
  PnlMaxMusteri.SetclProSettings(PnlMaxMusteri.clProSettings);
  ListOlustur_TopMusteri;
  
  PnlZamanSatisChart = MyForm.AddNewProPanel(PnlPage0Sol, 'PnlZamanSatisChart');
  PnlZamanSatisChart.Height = 300;
  PnlZamanSatisChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G1);
  PnlZamanSatisChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G1);
  PnlZamanSatisChart.Align = alTop ;
  PnlZamanSatisChart.Margins.Top = (MarginDeger*2);
  PnlZamanSatisChart.clProSettings.BorderWidth = 2;
  PnlZamanSatisChart.clProSettings.RoundHeight =10;
  PnlZamanSatisChart.clProSettings.RoundWidth = 10;  
  PnlZamanSatisChart.SetclProSettings(PnlZamanSatisChart.clProSettings);
  

  PnlBolgeAnalizi = MyForm.AddNewProPanel(PnlPage0orta,'PnlBolgeAnalizi');
  PnlBolgeAnalizi.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G2);
  PnlBolgeAnalizi.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G2);
  PnlBolgeAnalizi.Align = alTop;
  PnlBolgeAnalizi.Height = 350;
  PnlBolgeAnalizi.clProSettings.BorderWidth = 2;
  PnlBolgeAnalizi.clProSettings.RoundHeight =10;
  PnlBolgeAnalizi.clProSettings.RoundWidth = 10;
  PnlBolgeAnalizi.SetclProSettings(PnlBolgeAnalizi.clProSettings);
  
  PnlZamanChart = MyForm.AddNewProPanel(PnlPage0orta,'PnlZamanChart');
  PnlZamanChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0G3);
  PnlZamanChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0G3);
  PnlZamanChart.Align = alTop ;
  PnlZamanChart.Height = 350;
  PnlZamanChart.Margins.Top = (MarginDeger*2);
  PnlZamanChart.clProSettings.BorderWidth = 2;
  PnlZamanChart.clProSettings.RoundHeight =10;
  PnlZamanChart.clProSettings.RoundWidth = 10;
  PnlZamanChart.SetclProSettings(PnlZamanChart.clProSettings);
  
 
  P0_TumComboBoxYillariYukle;
  MyForm.AddNewEvent(cbSatis, tbeOnChange, 'SQL_AylikSatisChart');
  SQL_AylikSatisChart;
  
  MyForm.AddNewEvent(cbBolge, tbeOnChange, 'SQL_BolgeAnalizi');
  SQL_BolgeAnalizi;
  
  MyForm.AddNewEvent(cbZaman, tbeOnChange, 'SQL_ZamanChart');
  SQL_ZamanChart;

  
  PnlToplamSatis = MyForm.AddNewProPanel(PnlOzetBilgi_P0, 'PnlToplamSatis');
  PnlToplamSatis.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamSatis.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamSatis.Align = alTop;
  PnlToplamSatis.Margins.Top = 20;
  PnlToplamSatis.Height = 50;
  PnlToplamSatis.clProSettings.RoundHeight =10;
  PnlToplamSatis.clProSettings.RoundWidth = 10;
  PnlToplamSatis.SetclProSettings(PnlToplamSatis.clProSettings);

  PnlToplamMusteriSayi = MyForm.AddNewProPanel(PnlOzetBilgi_P0, 'PnlToplamMusteriSayi');
  PnlToplamMusteriSayi.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamMusteriSayi.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamMusteriSayi.Align = alTop;
  PnlToplamMusteriSayi.Margins.Top = 20;
  PnlToplamMusteriSayi.Height = 50;
  PnlToplamMusteriSayi.clProSettings.RoundHeight =10;
  PnlToplamMusteriSayi.clProSettings.RoundWidth = 10;
  PnlToplamMusteriSayi.SetclProSettings(PnlToplamMusteriSayi.clProSettings);
  
  PnlToplamSiparis = MyForm.AddNewProPanel(PnlOzetBilgi_P0, 'PnlToplamSiparis');
  PnlToplamSiparis.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamSiparis.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P0B1);
  PnlToplamSiparis.Align = alTop;
  PnlToplamSiparis.Margins.Top = 20;
  PnlToplamSiparis.Height = 50;
  PnlToplamSiparis.clProSettings.RoundHeight =10;
  PnlToplamSiparis.clProSettings.RoundWidth = 10;
  PnlToplamSiparis.SetclProSettings(PnlToplamSiparis.clProSettings);

  LblToplamSatis = MyForm.AddNewProLabel(PnlToplamSatis, 'LblToplamSatis', 'Toplam Satış: ₺...');
  LblToplamSatis.clProSettings.FontSize = 13;
  LblToplamSatis.clProSettings.AutoSize = True;
  LblToplamSatis.clProSettings.TextSettings.Font.Style = [fsBold];
  LblToplamSatis.clProSettings.FontColor = clAlphaColor.clHexToColor(renk_P0Y);
  LblToplamSatis.SetclProSettings(LblToplamSatis.clProSettings);
  
  LblToplamMusteri = MyForm.AddNewProLabel(PnlToplamMusteriSayi, 'LblToplamMusteri', 'Toplam Müşteri: ...');
  LblToplamMusteri.clProSettings.FontSize = 13;
  LblToplamMusteri.clProSettings.AutoSize = True;
  LblToplamMusteri.clProSettings.TextSettings.Font.Style = [fsBold];
  LblToplamMusteri.clProSettings.FontColor = clAlphaColor.clHexToColor(renk_P0Y);
  LblToplamMusteri.SetclProSettings(LblToplamMusteri.clProSettings);

  LblToplamSiparis = MyForm.AddNewProLabel(PnlToplamSiparis, 'LblToplamSiparis', 'Toplam Sipariş: ...');
  LblToplamSiparis.clProSettings.FontSize = 13;
  LblToplamSiparis.clProSettings.AutoSize = True;
  LblToplamSiparis.clProSettings.TextSettings.Font.Style = [fsBold];
  LblToplamSiparis.clProSettings.FontColor = clAlphaColor.clHexToColor(renk_P0Y);
  LblToplamSiparis.SetclProSettings(LblToplamSiparis.clProSettings);

  SQL_P0_OzetBilgiler;
}


//////////////////////////////////////PAGE1////////////////////////////////////////////

//Tüm müşterler ve yaptıkları alışveriş miktarı
void SQL_ToplamMusteriler
  var
  Qry : TclSQLQuery;
{
  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'Customers.CustomerId AS LblMusteriID, ' +
      'Customers.Name AS LblMusteriAd1, ' +
      'CAST(SUM(OrderItems.Quantity * OrderItems.UnitPrice) AS NVARCHAR) + '' tl harcama yapıldı.'' AS LblMusteriHarcama ' +
      'FROM Orders ' +
      'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
      'JOIN Customers ON Customers.CustomerId = Orders.CustomerId ' +
      'GROUP BY Customers.CustomerId, Customers.Name ' +
      'ORDER BY SUM(OrderItems.Quantity * OrderItems.UnitPrice) DESC'
    );

    Qry.Open;
    ListToplamMusteri.clLoadProListViewDataFromDataset(Qry);
  }
  except
    ShowMessage('SQL Hatası - Exception Class: ' + LastExceptionClassName + ' Exception Message: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Tüm müşterilerin listview tasarımı
void List_MusteriSegment
{
  ListToplamMusteri = MyForm.AddNewProListView(PnlToplamMusteri, 'ListToplamMusteri');
  ListToplamMusteri.Align = alClient;
  ListToplamMusteri.clProSettings.ColCount = 1;
  ListToplamMusteri.clProSettings.ItemSpace = 5;
  ListToplamMusteri.clProSettings.RoundWidth = 10;
  ListToplamMusteri.clProSettings.RoundHeight = 10;
  ListToplamMusteri.SetclProSettings(ListToplamMusteri.clProSettings);

  DPToplamMusteri = MyForm.AddNewProListViewDesignerPanel(ListToplamMusteri, 'DPToplamMusteri');
  DPToplamMusteri.Height = 150;
  DPToplamMusteri.Width = 150;
  DPToplamMusteri.Margins.Bottom = 10;
  DPToplamMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listkart);
  DPToplamMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listkart);
  DPToplamMusteri.clProSettings.BorderWidth = 1;
  DPToplamMusteri.clProSettings.RoundWidth = 10;
  DPToplamMusteri.clProSettings.RoundHeight = 10;
  DPToplamMusteri.SetclProSettings(DPToplamMusteri.clProSettings);
  searchEdtToplamMusteri.TargetListView = ListToplamMusteri;
  ListToplamMusteri.SetDesignerPanel(DPToplamMusteri);

  // Müşteri Adı
  LblMusteriAd1 = MyForm.AddNewProLabel(DPToplamMusteri, 'LblMusteriAd1', 'Müşteri Adı');
  LblMusteriAd1.Align = alTop;
  LblMusteriAd1.Margins.Top = 15;
  LblMusteriAd1.clProSettings.FontHorzAlign = palcenter;
  LblMusteriAd1.Properties.AutoSize = True;
  LblMusteriAd1.SetclProSettings(LblMusteriAd1.clProSettings);
  DPToplamMusteri.AddPanelObject(LblMusteriAd1, clCaption);

  // Harcama Bilgisi
  LblMusteriHarcama = MyForm.AddNewProLabel(DPToplamMusteri, 'LblMusteriHarcama', '₺');
  LblMusteriHarcama.Align = alBottom;
  LblMusteriHarcama.Margins.Left = 20;
  LblMusteriHarcama.Properties.AutoSize = True;
  DPToplamMusteri.AddPanelObject(LblMusteriHarcama, clText);

  // Müşteri ID (gizli)
  LblMusteriID = MyForm.AddNewProLabel(DPToplamMusteri, 'LblMusteriID', 'ID');
  LblMusteriID.Visible = False;
  DPToplamMusteri.AddPanelObject(LblMusteriID, clText1);

  SQL_ToplamMusteriler;
}

//Müşteri listesinin SearchEditi
void searchEdt_ToplamMusteri
{
  searchEdtToplamMusteri = MyForm.AddNewProSearchEdit(PnlToplamMusteri, 'searchEdtToplamMusteri', 'Buraya yazınız...');
  searchEdtToplamMusteri.Align = alTop;
  searchEdtToplamMusteri.Height = 40;
  searchEdtToplamMusteri.Margins.Top = 15;
  searchEdtToplamMusteri.Margins.Left = 15;
  searchEdtToplamMusteri.Margins.Right = 15;
  searchEdtToplamMusteri.Margins.Bottom = 10;
  searchEdtToplamMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtToplamMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtToplamMusteri.clProSettings.RoundHeight = 15;
  searchEdtToplamMusteri.clProSettings.RoundWidth = 15;
  searchEdtToplamMusteri.clProSettings.BorderWidth = 1;
  searchEdtToplamMusteri.SetclProSettings(searchEdtToplamMusteri.clProSettings);
}

// Yıl bazlı combobox'a veri yükler
void P1_CBZaman_YilAta
var
  yil, sonYil: String;
  i: Integer;
  Qry : TclSQLQuery;
{
  cbZamanMusteri = MyForm.AddNewComboBox(PnlPage1Sag, 'cbZamanMusteri');

  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT DISTINCT YEAR(OrderDate) AS Yil ' +
      'FROM Orders ' +
      'ORDER BY Yil DESC'
    );

    Qry.Open;

    while (not Qry.Eof)
    {
      yil = Qry.FieldByName('Yil').AsString;
      cbZamanMusteri.AddItem(yil, yil);
      Qry.Next;
    }

    sonYil = FormatDateTime('yyyy', Now);

    for i = 0 to cbZamanMusteri.Items.Count - 1
    {
      if cbZamanMusteri.Items.Strings[i] == sonYil
        cbZamanMusteri.ItemIndex = i;
    }
  }
  except
    ShowMessage('cbZamanMusteri yüklenirken hata: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Seçilen yıla ait ortalama siparis ve ortalama sepet tutarı 
void SQL_P1_OzetBilgiler 
  var 
  secilenYil : String;
  Qry : TclSQLQuery;
{
  try
  {
    secilenYil = cbZamanMusteri.Items[cbZamanMusteri.ItemIndex];

    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'ROUND(SUM(OrderItems.Quantity * OrderItems.UnitPrice) / COUNT(DISTINCT Orders.CustomerId), 2) AS OrtalamaSepet, ' +
      'ROUND(CAST(COUNT(*) AS FLOAT) / COUNT(DISTINCT Orders.CustomerId), 2) AS OrtalamaSiparis ' +
      'FROM Orders ' +
      'JOIN OrderItems ON OrderItems.OrderId = Orders.OrderId ' +
      'WHERE YEAR(Orders.OrderDate) = ' + secilenYil
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      LblMusteriSepetDeger.Caption = '₺' + Qry.FieldByName('OrtalamaSepet').AsString;
      LblMusteriSiparisDeger.Caption = Qry.FieldByName('OrtalamaSiparis').AsString;
    }
  }
  except
    ShowMessage('SQL Hatası - Exception Class: ' + LastExceptionClassName + ' Exception Message: ' + LastExceptionMessage);
  }
}

//Yıllık aktif müşteri sayısının grafiği
void OlusturYillikChart
  var 
  secilenYil : String;
  Qry : TclSQLQuery;
  LblYillik: TClProLabel;
{
  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT YEAR(OrderDate) AS Zaman, ' +
      'COUNT(DISTINCT CustomerId) AS AktifMusteri ' +
      'FROM Orders ' +
      'GROUP BY YEAR(OrderDate) ' +
      'ORDER BY Zaman'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      zamanMusteriYilChart = MyForm.AddNewChart(PnlZamanMusteriChart, 'zamanMusteriYilChart', '');
      zamanMusteriYilChart.Margins.Left = 5;
      zamanMusteriYilChart.Margins.Right = 5;
      zamanMusteriYilChart.Margins.Bottom = 5;
      zamanMusteriYilChart.Align = alClient;
      zamanMusteriYilChart.Charttype = clCLine;
      zamanMusteriYilChart.XAxisText = 'Zaman';
      zamanMusteriYilChart.ChartItemText = 'Müşteri';
      zamanMusteriYilChart.ChartItemsValue = 'AktifMusteri';
      zamanMusteriYilChart.clLoadDataFromDataSet(Qry);

      LblYillik = MyForm.AddNewProLabel(zamanMusteriYilChart, 'LblYillik',' Yıllık Aktif Müşteri Sayısı');
      LblYillik.Align = alTop;
      LblYillik.Height = 30;
      LblYillik.Width = 350;
      LblYillik.clProSettings.FontHorzAlign = palcenter;
      LblYillik.Margins.Bottom = 4;
      LblYillik.clProSettings.FontSize = 18;
      LblYillik.clProSettings.TextSettings.Font.Style = [fsBold];
      LblYillik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      LblYillik.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblYillik.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblYillik.clProSettings.BorderWidth = 2;
      LblYillik.SetclProSettings(LblYillik.clProSettings);

      clRTMethod(LblYillik, 'BringTofront');
    }
  }
  except
    ShowMessage('Yıllık Chart hatası: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Seçilen yılın aylık aktif müşteri sayısının grafiği
void OlusturAylikChart
  var 
  secilenYil : String;
  Qry : TclSQLQuery;
  LblAylik : TClProLabel;
{
  try
  {
    secilenYil = cbZamanMusteri.Items[cbZamanMusteri.ItemIndex];

    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT FORMAT(OrderDate, ''MM'') AS Zaman, ' +
      'COUNT(DISTINCT CustomerId) AS AktifMusteri ' +
      'FROM Orders ' +
      'WHERE YEAR(OrderDate) = ' + secilenYil + ' ' +
      'GROUP BY FORMAT(OrderDate, ''MM'') ' +
      'ORDER BY Zaman'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      zamanMusteriAyChart = MyForm.AddNewChart(PnlZamanMusteriChart, 'zamanMusteriAyChart', '');
      zamanMusteriAyChart.Margins.Left = 5;
      zamanMusteriAyChart.Margins.Right = 5;
      zamanMusteriAyChart.Margins.Bottom = 5;
      zamanMusteriAyChart.Align = alClient;
      zamanMusteriAyChart.Charttype = clCLine;
      zamanMusteriAyChart.XAxisText = 'Zaman';
      zamanMusteriAyChart.ChartItemText = 'Müşteri';
      zamanMusteriAyChart.ChartItemsValue = 'AktifMusteri';
      zamanMusteriAyChart.clLoadDataFromDataSet(Qry);
      
      LblAylik = MyForm.AddNewProLabel(zamanMusteriAyChart, 'LblAylik', secilenYil + ' Yılı Aylık Aktif Müşteri Sayısı');
      LblAylik.Align = alTop;
      LblAylik.Height = 30;
      LblAylik.Width = 350;
      LblAylik.clProSettings.FontHorzAlign = palcenter;
      LblAylik.Margins.Bottom = 4;
      LblAylik.clProSettings.FontSize = 18;
      LblAylik.clProSettings.TextSettings.Font.Style = [fsBold];
      LblAylik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      LblAylik.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblAylik.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblAylik.clProSettings.BorderWidth = 2;
      LblAylik.SetclProSettings(LblAylik.clProSettings);

      clRTMethod(LblAylik,'BringTofront');
    }
  }
  except
    ShowMessage('Aylık Chart hatası: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//Seçilen yılın haftalık aktif müşteri sayısının grafiği
void OlusturHaftalikChart
  var 
  secilenYil : String;
  LblHaftalik : TClProLabel;
  Qry : TclSQLQuery;
{
  try
  {
    secilenYil = cbZamanMusteri.Items[cbZamanMusteri.ItemIndex];

    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT DATEPART(WK, OrderDate) AS Zaman, ' +
      'COUNT(DISTINCT CustomerId) AS AktifMusteri ' +
      'FROM Orders ' +
      'WHERE YEAR(OrderDate) = ' + secilenYil + ' ' +
      'GROUP BY DATEPART(WK, OrderDate) ' +
      'ORDER BY Zaman'
    );
    
    Qry.Open;

    if not Qry.IsEmpty
    {
      zamanMusteriHaftaChart = MyForm.AddNewChart(PnlZamanMusteriChart, 'zamanMusteriHaftaChart', '');
      zamanMusteriHaftaChart.Margins.Left = 5;
      zamanMusteriHaftaChart.Margins.Right = 5;
      zamanMusteriHaftaChart.Margins.Bottom = 5;
      zamanMusteriHaftaChart.Align = alClient;
      zamanMusteriHaftaChart.Charttype = clCLine;
      zamanMusteriHaftaChart.XAxisText = 'Zaman';
      zamanMusteriHaftaChart.ChartItemText = 'Müşteri';
      zamanMusteriHaftaChart.ChartItemsValue = 'AktifMusteri';
      zamanMusteriHaftaChart.clLoadDataFromDataSet(Qry);
      
      LblHaftalik = MyForm.AddNewProLabel(zamanMusteriHaftaChart, 'LblHaftalik', secilenYil + ' Yılı Haftalık Aktif Müşteri Sayısı');
      LblHaftalik.Align = alTop;
      LblHaftalik.Height = 30;
      LblHaftalik.Width = 350;
      LblHaftalik.clProSettings.FontHorzAlign = palcenter;
      LblHaftalik.Margins.Bottom = 4;
      LblHaftalik.clProSettings.FontSize = 18;
      LblHaftalik.clProSettings.TextSettings.Font.Style = [fsBold];
      LblHaftalik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
      LblHaftalik.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblHaftalik.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1G1);
      LblHaftalik.clProSettings.BorderWidth = 2;
      LblHaftalik.SetclProSettings(LblHaftalik.clProSettings);

      clRTMethod(LblHaftalik,'BringTofront');
    }
  }
  except
    ShowMessage('Haftalık Chart hatası: ' + LastExceptionMessage);
  }
  Qry.Free;
}

//ComboBox değişimiyle chart yenileme
void AktifMusteriTumuYenile
{
  if zamanMusteriAyChart <> nil {
    zamanMusteriAyChart.Free;
    zamanMusteriAyChart = nil;
  }
  if zamanMusteriYilChart <> nil {
    zamanMusteriYilChart.Free;
    zamanMusteriYilChart = nil;
  }
  if zamanMusteriHaftaChart <> nil {
    zamanMusteriHaftaChart.Free;
    zamanMusteriHaftaChart = nil;
  }
  
  SQL_P1_OzetBilgiler;
  OlusturAylikChart;
  OlusturYillikChart;
  OlusturHaftalikChart;

  zamanMusteriHaftaChart.Visible = False;
  zamanMusteriYilChart.Visible = False;
  aktifModMusteri = 'aylik';
}


void MusteriChartGorunumIleri 
{
  if (aktifModMusteri == 'aylik') 
  {
    zamanMusteriAyChart.Visible = False;
    zamanMusteriHaftaChart.Visible = True;
    zamanMusteriYilChart.Visible = False;
    aktifModMusteri = 'haftalik';
  } 
  else if (aktifModMusteri == 'haftalik') 
  {
    zamanMusteriHaftaChart.Visible = False;
    zamanMusteriYilChart.Visible = True;
    zamanMusteriAyChart.Visible = False;
    aktifModMusteri = 'yillik';
  }
  else 
  {
    zamanMusteriYilChart.Visible = False;
    zamanMusteriAyChart.Visible = True;
    zamanMusteriHaftaChart.Visible = False;
    aktifModMusteri = 'aylik';
  }
}


void MusteriChartGorunumGeri 
{
  if (aktifModMusteri == 'aylik') 
  {
    zamanMusteriAyChart.Visible = False;
    zamanMusteriYilChart.Visible = True;
    zamanMusteriHaftaChart.Visible = False;
    aktifModMusteri = 'yillik';
  } 
  else if (aktifModMusteri == 'yillik') 
  {
    zamanMusteriYilChart.Visible = False;
    zamanMusteriHaftaChart.Visible = True;
    zamanMusteriAyChart.Visible = False;
    aktifModMusteri = 'haftalik';
  }
  else
  {
    zamanMusteriHaftaChart.Visible = False;
    zamanMusteriAyChart.Visible = True;
    zamanMusteriYilChart.Visible = False;
    aktifModMusteri = 'aylik';
  }
}

//Seçilen müşterinin bütün sipariş geçmişi için grid
void MusteriForm_SiparisGrid(selectedId : UnicodeString)
var 
 secim : Integer;
 siralamaKriteri : String;
 Qry : TclSQLQuery;
{
  if gridMusteriSiparis <> nil
  {
    gridMusteriSiparis.Free; // mevcut tabloyu bellekten temizle
    gridMusteriSiparis = nil;
  }
  
  gridMusteriSiparis = MusteriForm.AddNewProGrid(MusteriForm, 'gridMusteriSiparis');
  gridMusteriSiparis.fixedRows = 1;
  gridMusteriSiparis.fixedColumns= 0;
  gridMusteriSiparis.Options.Selection.Mode = smsingleRow;
  gridMusteriSiparis.Options.ColumnSize.StretchAll = True;
  gridMusteriSiparis.Align = alClient;

  gridMusteriSiparis.FixedLayoutFillColor = clAlphaColor.clHexToColor('#00b282'); //Üst Panel Renkleri 	
  gridMusteriSiparis.FixedLayoutFontColor = clAlphaColor.clHexToColor('#ffffff');
  gridMusteriSiparis.NormalLayoutFillColor = clAlphaColor.clHexToColor('#cce8e0');	 // tek sayılı satırların renkleri
  gridMusteriSiparis.NormalLayoutFontColor = clAlphaColor.clHexToColor('#ffffff');

  // Bütün siparişlerin sorgusu
  try 
  {
    // ComboBox seçimini al (default: Sipariş Tarihi)
    siralamaKriteri = 'Orders.OrderDate DESC';
    if ((cbGridSecim <> nil) && (cbGridSecim.ItemIndex >= 0))
    {
      secim = cbGridSecim.TEXT;
      
      if secim == 'Sipariş Kodu'
        siralamaKriteri = 'Orders.OrderId';
      else if secim == 'Sipariş Tarihi'
        siralamaKriteri = 'Orders.OrderDate DESC';
      else if secim == 'Adet'
        siralamaKriteri = 'OrderItems.Quantity DESC';
      else if secim == 'Birim Fiyat'
        siralamaKriteri = 'OrderItems.UnitPrice DESC';
      else if secim == 'Toplam Tutar'
        siralamaKriteri = '(OrderItems.Quantity * OrderItems.UnitPrice) DESC';
    }
    
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'Orders.OrderId AS [Sipariş Kodu], ' +
      'Orders.OrderDate AS [Sipariş Tarihi], ' +
      'Products.ProductName AS [Ürün], ' +
      'OrderItems.Quantity AS [Adet], ' +
      'OrderItems.UnitPrice AS [Birim Fiyat (₺)], ' +
      'CAST(ROUND(OrderItems.Quantity * OrderItems.UnitPrice, 2) AS NVARCHAR) AS [Toplam Tutar (₺)] ' +
      'FROM Orders ' +
      'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
      'JOIN Products ON Products.ProductId = OrderItems.ProductId ' +
      'WHERE Orders.CustomerId = ' + selectedId + ' ' +
      'ORDER BY ' + siralamaKriteri
    );

    Qry.Open;

    if Qry.IsEmpty
      ShowMessage('Seçilen müşteriye ait sipariş bulunamadı.');

    gridMusteriSiparis.ConnectDataSet(Qry);
  } 
  except 
    ShowMessage('Sipariş sorgusu veya grid bağlantısında hata oluştu.');
  }
}

//Sıralama değişikliği yapılırsa yenileme
void P1_CbGrid_SecimDegisti
{
  selectedId = ListToplamMusteri.clSelectedItemData(clText1);
  MusteriForm_SiparisGrid(selectedId); 
}

//Sıralama değişikliği için seçenek atama
void P1_CbGrid_SecenekAta
{
  cbGridSecim = MusteriForm.AddNewComboBox(PnlMusteriBilgi, 'cbGridSecim');
  cbGridSecim.Align = alRight;
  cbGridSecim.Margins.Top = 80;
  cbGridSecim.Margins.Right = 20;

  try 
  {
    cbGridSecim.AddItem('Sipariş Kodu','0');
    cbGridSecim.AddItem('Sipariş Tarihi','1');
    cbGridSecim.AddItem('Adet','2');
    cbGridSecim.AddItem('Birim Fiyat','3');
    cbGridSecim.AddItem('Toplam Tutar','4');

    cbGridSecim.ItemIndex = 1; // default: Sipariş Tarihi
    MusteriForm.AddNewEvent(cbGridSecim, tbeOnChange, 'P1_CbGrid_SecimDegisti');
  } 
  except 
    ShowMessage('cbGridSecim yüklenirken hata: ' + LastExceptionMessage);
  }
}

//grid üstünde panel bilgileri
void MusteriForm_PanelBilgi(selectedId : UnicodeString)
var
  Qry : TclSQLQuery;
  PnlMusteriBilgiIci : TclProPanel;
  LblMusteriName, LblMusteriCity, LblMusteriRegDate : TClProLabel;
{
  PnlMusteriBilgi = MusteriForm.AddNewProPanel(MusteriForm, 'PnlMusteriBilgi');
  PnlMusteriBilgi.Align = alTop;
  PnlMusteriBilgi.Margins.Left = 10;
  PnlMusteriBilgi.Margins.Right = 10;
  PnlMusteriBilgi.Margins.Top = 10;
  PnlMusteriBilgi.Margins.Bottom = 10;
  PnlMusteriBilgi.Height = 100;

  P1_CbGrid_SecenekAta;
  
  // Şehir ve kayıt tarihi sorgusu 
  try 
  {
     Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT City, RegistrationDate FROM Customers WHERE CustomerId = ' + selectedId
    );

    Qry.Open;

    if not Qry.IsEmpty 
    {
      PnlMusteriBilgiIci = MusteriForm.AddNewProPanel(PnlMusteriBilgi, 'PnlMusteriBilgiIci');
      PnlMusteriBilgiIci.Align = alLeft;
      PnlMusteriBilgiIci.Margins.Top = 10;
      PnlMusteriBilgiIci.clProSettings.RoundHeight =10;
      PnlMusteriBilgiIci.clProSettings.RoundWidth = 10;
      PnlMusteriBilgiIci.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#ffffff');
      PnlMusteriBilgiIci.clProSettings.BorderColor = clAlphaColor.clHexToColor('#000000');
      PnlMusteriBilgiIci.clProSettings.BorderWidth = 1;
      PnlMusteriBilgiIci.SetclProSettings(PnlMusteriBilgiIci.clProSettings);
      
      LblMusteriName = MusteriForm.AddNewProLabel(PnlMusteriBilgiIci, 'LblMusteriName', ListToplamMusteri.clSelectedItemData(clCaption));
      LblMusteriName.Align = alTop;
      LblMusteriName.clProSettings.FontHorzAlign  = palcenter;
      LblMusteriName.clProSettings.AutoSize = True;
      LblMusteriName.clProSettings.WordWrap = True;
      LblMusteriName.Margins.Top = 10;
      LblMusteriName.clProSettings.FontSize = 18;
      LblMusteriName.clProSettings.TextSettings.Font.Style = [fsBold];
      LblMusteriName.SetclProSettings(LblMusteriName.clProSettings);

      LblMusteriCity = MusteriForm.AddNewProLabel(PnlMusteriBilgiIci, 'LblMusteriCity', 'Şehir: ' + Qry.FieldByName('City').AsString);
      LblMusteriCity.Align = alTop;
      LblMusteriCity.clProSettings.FontHorzAlign  = palcenter;
      LblMusteriCity.Margins.Top = 5;
      LblMusteriCity.Margins.Left = 3;
      LblMusteriCity.clProSettings.FontSize = 14;
      LblMusteriCity.clProSettings.TextSettings.Font.Style = [fsItalic];
      LblMusteriCity.SetclProSettings(LblMusteriCity.clProSettings);
      
      LblMusteriRegDate = MusteriForm.AddNewProLabel(PnlMusteriBilgiIci, 'LblMusteriRegDate', 'Kayıt Tarihi: ' + Qry.FieldByName('RegistrationDate').AsString);
      LblMusteriRegDate.Align = alTop;
      LblMusteriRegDate.clProSettings.FontHorzAlign  = palcenter;
      LblMusteriRegDate.Margins.Top = 3;
      LblMusteriRegDate.Margins.Left = 3;
      LblMusteriRegDate.clProSettings.FontSize = 14;
      LblMusteriRegDate.clProSettings.TextSettings.Font.Style = [fsItalic];
      LblMusteriRegDate.SetclProSettings(LblMusteriRegDate.clProSettings);
    }
    else
    ShowMessage('Kayıt yok');
  } 
  except 
    ShowMessage('Müşteri şehir ve kayıt tarihi sorgusunda hata oluştu.');
  }
  Qry.Free;
}

//Seçilen müşteri için panel açılışı
void MusteriFormAcilis
{
  cbGridSecim = nil;
  gridMusteriSiparis = nil;
  
  MusteriForm = TCLForm.Create(Self);
  MusteriForm.LytTopBar.Visible = False;
  MusteriForm.clSetWindowState(fwsMaximized);
  MusteriForm.SetFormColor('#ffffff','#7fc5b3',clGCross);

  selectedId = ListToplamMusteri.clSelectedItemData(clText1);
  MusteriForm_PanelBilgi(selectedId);
  MusteriForm_SiparisGrid(selectedId);

  MusteriForm.Run;
}

//Panellerin boyutunu ayarlar
void P1_OnPageResize;
{
  PnlToplamMusteri.Width  = (PnlPage1.Width * 42) / 100; //650
  PnlToplamMusteri.Height  = PnlPage1.Height;
  PnlPage1Sag.Width  = (PnlPage1.Width * 42) / 100; //650
  PnlPage1Sag.Height  = PnlPage1.Height;
}

//Mobil ise ScrollBox masaüstü ise tek panelde görünüm
void P1_isMobile
var
  isMobile : Boolean;
  marginDeger : Integer;
{
  marginDeger = 20;
  isMobile = Clomosy.PlatformIsMobile;
  
  if isMobile
  {
    Page1_ScrollBox = MyForm.AddNewVertScrollBox(PnlPage1,'Page1_ScrollBox');
    Page1_ScrollBox.Align = alClient;
    Page1_ScrollBox.ShowScrollBars = True;
    
    PnlToplamMusteri = MyForm.AddNewProPanel(Page1_ScrollBox, 'PnlToplamMusteri');
    PnlToplamMusteri.Align = alTop;
    PnlToplamMusteri.Height =200;
    PnlToplamMusteri.Margins.Left = marginDeger;
    PnlToplamMusteri.Margins.Right = marginDeger;
    PnlToplamMusteri.Margins.Top = marginDeger; 
    PnlToplamMusteri.clProSettings.RoundWidth = 10;
    PnlToplamMusteri.clProSettings.RoundHeight = 10;
    PnlToplamMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamMusteri.SetclProSettings(PnlToplamMusteri.clProSettings);
    
    PnlZamanMusteriChart = MyForm.AddNewProPanel(Page1_ScrollBox, 'PnlZamanMusteriChart');
    PnlZamanMusteriChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1G1);
    PnlZamanMusteriChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1G1);
    PnlZamanMusteriChart.Align = alTop; 
    PnlZamanMusteriChart.Height = 350;
    PnlZamanMusteriChart.Margins.Left = marginDeger;
    PnlZamanMusteriChart.Margins.Right = marginDeger;
    PnlZamanMusteriChart.Margins.Top = marginDeger; 
    PnlZamanMusteriChart.clProSettings.BorderWidth = 2;
    PnlZamanMusteriChart.clProSettings.RoundHeight =10;
    PnlZamanMusteriChart.clProSettings.RoundWidth = 10;
    PnlZamanMusteriChart.SetclProSettings(PnlZamanMusteriChart.clProSettings);
    
    PnlOzetBilgi_P1 = MyForm.AddNewProPanel(Page1_ScrollBox, 'PnlOzetBilgi_P1');
    PnlOzetBilgi_P1.Align = alTop;
    PnlOzetBilgi_P1.Margins.Left = marginDeger;
    PnlOzetBilgi_P1.Margins.Right = marginDeger;
    PnlOzetBilgi_P1.Margins.Top = marginDeger;
    PnlOzetBilgi_P1.Height = 350;
  
    PnlMusteriSepet = MyForm.AddNewProPanel(PnlOzetBilgi_P1,'PnlMusteriSepet');
    PnlMusteriSepet.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSepet.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSepet.Align = alTop;
    PnlMusteriSepet.Height = 150;
    PnlMusteriSepet.clProSettings.RoundHeight =10;
    PnlMusteriSepet.clProSettings.RoundWidth = 10;
    PnlMusteriSepet.SetclProSettings(PnlMusteriSepet.clProSettings);
    
    PnlMusteriSiparisSayisi = MyForm.AddNewProPanel(PnlOzetBilgi_P1,'PnlMusteriSiparisSayisi');
    PnlMusteriSiparisSayisi.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSiparisSayisi.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSiparisSayisi.Align = alTop;
    PnlMusteriSiparisSayisi.Margins.Top = 20;
    PnlMusteriSiparisSayisi.Height = 150;
    PnlMusteriSiparisSayisi.clProSettings.RoundHeight =10;
    PnlMusteriSiparisSayisi.clProSettings.RoundWidth = 10;
    PnlMusteriSiparisSayisi.SetclProSettings(PnlMusteriSiparisSayisi.clProSettings);
  }
  else
  { 
    PnlToplamMusteri = MyForm.AddNewProPanel(PnlPage1, 'PnlToplamMusteri');
    PnlToplamMusteri.Align = alLeft;
    PnlToplamMusteri.Margins.Left = (marginDeger * 5);
    PnlToplamMusteri.Margins.Top = marginDeger; 
    PnlToplamMusteri.Margins.Bottom = marginDeger * 2; 
    PnlToplamMusteri.clProSettings.RoundWidth = 10;
    PnlToplamMusteri.clProSettings.RoundHeight = 10;
    PnlToplamMusteri.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamMusteri.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamMusteri.SetclProSettings(PnlToplamMusteri.clProSettings);
    
    PnlPage1Sag = MyForm.AddNewProPanel(PnlPage1,'PnlPage1Sag');
    PnlPage1Sag.Align = alLeft;
    PnlPage1Sag.Margins.Left = (marginDeger * 5);
    PnlPage1Sag.Margins.Top = marginDeger; 
    PnlPage1Sag.Margins.Bottom = marginDeger * 2;
    
    
    PnlZamanMusteriChart = MyForm.AddNewProPanel(PnlPage1Sag, 'PnlZamanMusteriChart');
    PnlZamanMusteriChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1G1);
    PnlZamanMusteriChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1G1);
    PnlZamanMusteriChart.Align = alTop;
    PnlZamanMusteriChart.Height = 350;
    PnlZamanMusteriChart.clProSettings.BorderWidth = 2;
    PnlZamanMusteriChart.clProSettings.RoundHeight =10;
    PnlZamanMusteriChart.clProSettings.RoundWidth = 10;
    PnlZamanMusteriChart.SetclProSettings(PnlZamanMusteriChart.clProSettings);
    
    PnlOzetBilgi_P1 = MyForm.AddNewProPanel(PnlPage1Sag, 'PnlOzetBilgi_P1');
    PnlOzetBilgi_P1.Align = alTop;
    PnlOzetBilgi_P1.Margins.Top = 100;
    PnlOzetBilgi_P1.Height = 200;
  
    PnlMusteriSepet = MyForm.AddNewProPanel(PnlOzetBilgi_P1,'PnlMusteriSepet');
    PnlMusteriSepet.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSepet.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSepet.Align = alLeft;
    PnlMusteriSepet.Margins.Left = 40;
    PnlMusteriSepet.Width = 290;
    PnlMusteriSepet.clProSettings.RoundHeight =10;
    PnlMusteriSepet.clProSettings.RoundWidth = 10;
    PnlMusteriSepet.SetclProSettings(PnlMusteriSepet.clProSettings);
    
    PnlMusteriSiparisSayisi = MyForm.AddNewProPanel(PnlOzetBilgi_P1,'PnlMusteriSiparisSayisi');
    PnlMusteriSiparisSayisi.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSiparisSayisi.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P1B1);
    PnlMusteriSiparisSayisi.Align = alLeft;
    PnlMusteriSiparisSayisi.Margins.Left = 20;
    PnlMusteriSiparisSayisi.Width = 290;
    PnlMusteriSiparisSayisi.clProSettings.RoundHeight =10;
    PnlMusteriSiparisSayisi.clProSettings.RoundWidth = 10;
    PnlMusteriSiparisSayisi.SetclProSettings(PnlMusteriSiparisSayisi.clProSettings);
  }
}


void Page1
{
  PnlPage1 = MyForm.AddNewProPanel(clPageControl.PageContainers[1],'PnlPage1');
  PnlPage1.Align =alClient;
  PnlPage1.clProSettings.IsTransparent = True;
  PnlPage1.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage1.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage1.clProSettings.BorderWidth = 2;
  PnlPage1.SetclProSettings(PnlPage1.clProSettings);
  
  PnlPage1.OnResize = 'P1_OnPageResize';
  P1_isMobile;
  
  searchEdt_ToplamMusteri;
  List_MusteriSegment;
  
  MyForm.AddNewEvent(ListToplamMusteri,tbeOnItemClick,'MusteriFormAcilis');
  
  P1_CBZaman_YilAta;
  MyForm.AddNewEvent(cbZamanMusteri, tbeOnChange, 'AktifMusteriTumuYenile');


  PnlBtnMusteri = MyForm.AddNewProPanel(PnlZamanMusteriChart,'PnlBtnMusteri');
  PnlBtnMusteri.Align = alTop;
  PnlBtnMusteri.Height = 40;
  PnlBtnMusteri.Width = 60;
  
  BtnMusteriLeft = MyForm.AddNewProButton(PnlBtnMusteri, 'BtnMusteriLeft', '');
  BtnMusteriLeft.clProSettings.PictureSource ='https://resmim.net/cdn/2025/07/21/XXLlxQ.png';
  BtnMusteriLeft.Align = alCenter;
  BtnMusteriLeft.Align = alCenter;
  BtnMusteriLeft.Margins.Right = 50;
  BtnMusteriLeft.Margins.Top = 5;
  BtnMusteriLeft.Margins.Bottom = 5;
  BtnMusteriLeft.SetclProSettings(BtnMusteriLeft.clProSettings);
  
  BtnMusteriRight = MyForm.AddNewProButton(PnlBtnMusteri, 'BtnMusteriRight', '');
  BtnMusteriRight.clProSettings.PictureSource ='https://resmim.net/cdn/2025/07/24/XHTrDb.png';
  BtnMusteriRight.Align = alCenter;
  BtnMusteriRight.Margins.Left = 50;
  BtnMusteriRight.Margins.Top = 5;
  BtnMusteriRight.Margins.Bottom = 5;
  BtnMusteriRight.SetclProSettings(BtnMusteriRight.clProSettings);
  
  MyForm.AddNewEvent(BtnMusteriLeft,tbeOnClick,'MusteriChartGorunumGeri');
  MyForm.AddNewEvent(BtnMusteriRight,tbeOnClick,'MusteriChartGorunumIleri');
  aktifModMusteri = 'aylik';
  

  LblMusteriSepet = MyForm.AddNewProLabel(PnlMusteriSepet, 'LblMusteriSepet', 'Ortalama Müşteri Sepet Tutarı:');
  LblMusteriSepet.Align = alTop; 
  LblMusteriSepet.Margins.Top = 20;
  LblMusteriSepet.clProSettings.FontHorzAlign = palcenter;
  LblMusteriSepet.clProSettings.FontSize = 15;
  LblMusteriSepet.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblMusteriSepet.clProSettings.WordWrap = True;
  LblMusteriSepet.SetclProSettings(LblMusteriSepet.clProSettings);
  
  LblMusteriSepetDeger = MyForm.AddNewProLabel(PnlMusteriSepet, 'LblMusteriSepetDeger', '');
  LblMusteriSepetDeger.Align = alBottom;
  LblMusteriSepetDeger.Margins.Bottom = 80;
  LblMusteriSepetDeger.clProSettings.FontSize = 22;
  LblMusteriSepetDeger.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblMusteriSepetDeger.clProSettings.TextSettings.Font.Style = [fsBold];
  LblMusteriSepetDeger.clProSettings.FontVertAlign = palcenter;
  LblMusteriSepetDeger.clProSettings.FontHorzAlign = palcenter;
  LblMusteriSepetDeger.SetclProSettings(LblMusteriSepetDeger.clProSettings);
  
  LblMusteriSiparisSayisi = MyForm.AddNewProLabel(PnlMusteriSiparisSayisi, 'LblMusteriSiparisSayisi', 'Ortalama Sipariş Sayısı:');
  LblMusteriSiparisSayisi.Align = alTop;
  LblMusteriSiparisSayisi.Margins.Top = 20;
  LblMusteriSiparisSayisi.clProSettings.FontHorzAlign = palcenter;
  LblMusteriSiparisSayisi.clProSettings.FontSize = 15;
  LblMusteriSiparisSayisi.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblMusteriSiparisSayisi.clProSettings.WordWrap = True;
  LblMusteriSiparisSayisi.SetclProSettings(LblMusteriSiparisSayisi.clProSettings);
  
  LblMusteriSiparisDeger = MyForm.AddNewProLabel(PnlMusteriSiparisSayisi, 'LblMusteriSiparisDeger', '');
  LblMusteriSiparisDeger.Align = alBottom;
  LblMusteriSiparisDeger.Margins.Bottom = 80;
  LblMusteriSiparisDeger.clProSettings.FontSize = 22;
  LblMusteriSiparisDeger.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblMusteriSiparisDeger.clProSettings.TextSettings.Font.Style = [fsBold];
  LblMusteriSiparisDeger.clProSettings.FontVertAlign = palcenter;
  LblMusteriSiparisDeger.clProSettings.FontHorzAlign = palcenter;
  LblMusteriSiparisDeger.SetclProSettings(LblMusteriSiparisDeger.clProSettings);
  
  AktifMusteriTumuYenile;
}


//////////////////////////////////////PAGE2////////////////////////////////////////////

// Tüm ürünleri ve satış sayıları
void SQL_ToplamUrunler
var
  Qry: TclSQLQuery;
  metin: String;
  filtre: String;
  secimler: TclStringList;
  kategoriFiltre: String;
  i: Integer;
{
  filtre = '';
  if (secimler <> nil) 
    secimler.Free;
  secimler = Clomosy.StringListNew;

  // Checkbox'lardan kategori ekle
  if (chkMamul.IsChecked) 
    secimler.Add('Mamül');
  if (chkYariMamul.IsChecked) 
    secimler.Add('Yari Mamül');
  if (chkHammadde.IsChecked) 
    secimler.Add('Hammadde');
  
  if (secimler.Count > 0) 
  {
    metin = '';
    for (i = 0 to secimler.Count - 1) 
    {
      if (i > 0) 
        metin = metin + ',';

      metin = metin + '''' + secimler.Strings[i] + ''''; // tek tırnak!
    }

    kategoriFiltre = metin;
    filtre = ' WHERE Products.Category IN (' + kategoriFiltre + ')';
  }
  else
  {
    filtre = '';
  }

  try 
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'Products.ProductId AS LblUrunRecord, ' +
      'Products.ProductName AS LblUrunAd, ' +
      'CAST(SUM(OrderItems.Quantity) AS NVARCHAR) + '' adet satıldı.'' AS LblUrunSatis ' +
      'FROM OrderItems ' +
      'JOIN Products ON Products.ProductId = OrderItems.ProductId ' +
      filtre + ' ' +
      'GROUP BY Products.ProductId, Products.ProductName ' +
      'ORDER BY SUM(OrderItems.Quantity) DESC'
    );

    Qry.Open;
    listToplamUrun.clLoadProListViewDataFromDataset(Qry);
    Qry.Free;
  }
  except 
    ShowMessage('SQL Hatası: ' + LastExceptionMessage);
  }
}

  
// Tüm ürünleri mevcut stok miktarları
void SQL_UrunStok
var
  Qry: TclSQLQuery;
  metin: String;
  filtre: String;
  secimler: TclStringList;
  kategoriFiltre: String;
  i: Integer;
{
  filtre = '';
  if (Assigned(secimler)) 
    secimler.Free;
  secimler = Clomosy.StringListNew;

  // Checkbox'lardan kategori ekle
  if (chkMamul2.IsChecked)
    secimler.Add('Mamül');
  if (chkYariMamul2.IsChecked) 
    secimler.Add('Yarı Mamül');
  if (chkHammadde2.IsChecked) 
    secimler.Add('Hammadde');

  if (secimler.Count > 0) 
  {
    metin = '';
    for (i = 0 to secimler.Count - 1) 
    {
      if (i > 0) 
        metin = metin + ',';

      metin = metin + '''' + secimler.Strings[i] + ''''; // tek tırnak!
    }

    kategoriFiltre = metin;
    filtre = ' WHERE Products.Category IN (' + kategoriFiltre + ')';
  }
  else
  {
    filtre = '';
  }

  try 
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ' +
      'Products.ProductId AS LblStokUrunId, ' +
      'Products.ProductName AS LblStokUrunAd, ' +
      'CAST(Stock.Quantity AS NVARCHAR) + '' adet stokta.'' AS LblStokUrunMiktar ' +
      'FROM Stock ' +
      'JOIN Products ON Products.ProductId = Stock.ProductId ' +
      filtre + ' ' +
      'ORDER BY Stock.Quantity DESC'
    );

    Qry.Open;
    ListUrunStok.clLoadProListViewDataFromDataset(Qry);
  }
  except
    ShowMessage('SQL Hatası - Exception Class: ' + LastExceptionClassName + ' Exception Message: ' + LastExceptionMessage);
  }
}

// Toplam ürünler için SearchEdit
void searchEdt_ToplamUrun
{
  searchEdtToplamUrun = MyForm.AddNewProSearchEdit(PnlToplamUrun, 'searchEdtToplamUrun', 'Buraya yazınız...');
  searchEdtToplamUrun.Align = alTop;
  searchEdtToplamUrun.Height = 40;
  searchEdtToplamUrun.Margins.Top = 12;
  searchEdtToplamUrun.Margins.Left = 15;
  searchEdtToplamUrun.Margins.Right = 15;
  searchEdtToplamUrun.Margins.Bottom = 10;
  searchEdtToplamUrun.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtToplamUrun.clProSettings.BorderColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtToplamUrun.clProSettings.RoundHeight = 15;
  searchEdtToplamUrun.clProSettings.RoundWidth = 15;
  searchEdtToplamUrun.clProSettings.BorderWidth = 2;

  searchEdtToplamUrun.SetclProSettings(searchEdtToplamUrun.clProSettings);
}

// Toplam ürünler için listview
void ListOlustur_ToplamUrun
{
  listToplamUrun = MyForm.AddNewProListView(PnlToplamUrun, 'listToplamUrun');
  listToplamUrun.Align = alClient;
  listToplamUrun.clProSettings.ColCount = 1;
  listToplamUrun.clProSettings.ItemSpace = 5;
  listToplamUrun.SetclProSettings(listToplamUrun.clProSettings);

  DPToplamUrun = MyForm.AddNewProListViewDesignerPanel(listToplamUrun, 'DPToplamUrun');
  DPToplamUrun.Height = 150;
  DPToplamUrun.Width = 150;
  DPToplamUrun.Margins.Bottom = 10;
  DPToplamUrun.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listkart);
  DPToplamUrun.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listkart);
  DPToplamUrun.clProSettings.BorderWidth = 1;
  DPToplamUrun.clProSettings.RoundWidth = 10;
  DPToplamUrun.clProSettings.RoundHeight = 10;
  DPToplamUrun.SetclProSettings(DPToplamUrun.clProSettings);
  listToplamUrun.SetDesignerPanel(DPToplamUrun);
  searchEdtToplamUrun.TargetListView = listToplamUrun;

  LblUrunAd = MyForm.AddNewProLabel(DPToplamUrun, 'LblUrunAd', 'Ürün');
  LblUrunAd.Align = alTop;
  LblUrunAd.Margins.Top = 15;
  LblUrunAd.clProSettings.FontHorzAlign = palcenter;
  LblUrunAd.Properties.AutoSize = True;
  LblUrunAd.SetclProSettings(LblUrunAd.clProSettings);
  DPToplamUrun.AddPanelObject(LblUrunAd, clCaption);

  LblUrunSatis = MyForm.AddNewProLabel(DPToplamUrun, 'LblUrunSatis', 'Adet');
  LblUrunSatis.Align = alBottom;
  LblUrunSatis.Margins.Left = 20;
  LblUrunSatis.Properties.AutoSize = True;
  DPToplamUrun.AddPanelObject(LblUrunSatis, clText);

  LblUrunRecord = MyForm.AddNewProLabel(DPToplamUrun, 'LblUrunRecord', 'Id');
  LblUrunRecord.Visible = False;
  DPToplamUrun.AddPanelObject(LblUrunRecord, clText1);

  SQL_ToplamUrunler;
}

//Stok ürünler için SeachEdit
void searchEdt_UrunStok
{
  searchEdtUrunStok = MyForm.AddNewProSearchEdit(PnlUrunStok, 'searchEdtUrunStok', 'Buraya yazınız...');
  searchEdtUrunStok.Align = alTop;
  searchEdtUrunStok.Height = 40;
  searchEdtUrunStok.Margins.Top = 12;
  searchEdtUrunStok.Margins.Left = 15;
  searchEdtUrunStok.Margins.Right = 15;
  searchEdtUrunStok.Margins.Bottom = 10;
  searchEdtUrunStok.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtUrunStok.clProSettings.BorderColor = clAlphaColor.clHexToColor('#FDFAF6');
  searchEdtUrunStok.clProSettings.RoundHeight = 15;
  searchEdtUrunStok.clProSettings.RoundWidth = 15;
  searchEdtUrunStok.clProSettings.BorderWidth = 2;

  searchEdtUrunStok.SetclProSettings(searchEdtUrunStok.clProSettings);
}

// Ürün stok bilgileri için listview 
void ListOlustur_UrunStok
{
  ListUrunStok = MyForm.AddNewProListView(PnlUrunStok, 'ListUrunStok');
  ListUrunStok.Align = alClient;
  ListUrunStok.clProSettings.ColCount = 1;
  ListUrunStok.clProSettings.ItemSpace = 5;
  ListUrunStok.SetclProSettings(ListUrunStok.clProSettings);

  DPUrunStok = MyForm.AddNewProListViewDesignerPanel(ListUrunStok, 'DPUrunStok');
  DPUrunStok.Height = 150;
  DPUrunStok.Width = 150;
  DPUrunStok.Margins.Bottom = 10;
  DPUrunStok.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listkart);
  DPUrunStok.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listkart);
  DPUrunStok.clProSettings.BorderWidth = 1;
  DPUrunStok.clProSettings.RoundWidth = 10;
  DPUrunStok.clProSettings.RoundHeight = 10;
  DPUrunStok.SetclProSettings(DPUrunStok.clProSettings);
  ListUrunStok.SetDesignerPanel(DPUrunStok);
  searchEdtUrunStok.TargetListView = ListUrunStok;

  LblStokUrunAd = MyForm.AddNewProLabel(DPUrunStok, 'LblStokUrunAd', 'Ürün');
  LblStokUrunAd.Align = alTop;
  LblStokUrunAd.Margins.Top = 15;
  LblStokUrunAd.clProSettings.FontHorzAlign = palcenter;
  LblStokUrunAd.Properties.AutoSize = True;
  LblStokUrunAd.SetclProSettings(LblStokUrunAd.clProSettings);
  DPUrunStok.AddPanelObject(LblStokUrunAd, clCaption);

  LblStokUrunMiktar = MyForm.AddNewProLabel(DPUrunStok, 'LblStokUrunMiktar', 'Adet');
  LblStokUrunMiktar.Align = alBottom;
  LblStokUrunMiktar.Margins.Left = 20;
  LblStokUrunMiktar.Properties.AutoSize = True;
  DPUrunStok.AddPanelObject(LblStokUrunMiktar, clText);

  LblStokUrunId = MyForm.AddNewProLabel(DPUrunStok, 'LblStokUrunId', 'Id');
  LblStokUrunId.Visible = False;
  DPUrunStok.AddPanelObject(LblStokUrunId, clText1);

  SQL_UrunStok;
}

// Yıl bazlı combobox'a veri yükler
void P2_CBUrun_YilAta
var
  Qry : TclSQLQuery;
  yil, sonYil: String;
  i: Integer;
{
  cbUrunZaman = MyForm.AddNewComboBox(PnlUrunChart, 'cbUrunZaman');
  cbUrunZaman.Margins.Left = 2;
  cbUrunZaman.Margins.Top = 2;
  clRTMethod(cbUrunZaman, 'BringToFront');

  try
  {
    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT DISTINCT YEAR(OrderDate) AS Yil ' +
      'FROM Orders ' +
      'ORDER BY Yil DESC'
    );

    Qry.Open;

    while (not Qry.Eof)
    {
      yil = Qry.FieldByName('Yil').AsString;
      cbUrunZaman.AddItem(yil, yil);
      Qry.Next;
    }

    sonYil = FormatDateTime('yyyy', Now);

    for i = 0 to cbUrunZaman.Items.Count - 1
    {
      if cbUrunZaman.Items.Strings[i] == sonYil
        cbUrunZaman.ItemIndex = i;
    }
  }
  except
    ShowMessage('cbUrunZaman yüklenirken hata: ' + LastExceptionMessage);
  }
  Qry.Free;
}

// Seçilen ürünün periyodik satış verilerini gösteren grafik
void SQL_UrunSatisVerisi(UrunId : String)
var
  secilenYil : String;
  Qry : TclSQLQuery;
{
  try
  {
    // Yıl combobox'ı seçili değilse çık
    if ((cbUrunZaman == nil) || (cbUrunZaman.Items.Count == 0) || (cbUrunZaman.ItemIndex < 0))
      Exit;

    // Ürün ID boşsa çık
    if (UrunId == '') 
    {
      ShowMessage('Ürün ID boş geldi');
      Exit;
    }

    // Grafik nesnesi oluşmadıysa çık
    if (urunZamanChart == nil) 
    {
      ShowMessage('Grafik nesnesi bulunamadı.');
      Exit;
    }

    // Seçilen yılı al
    secilenYil = cbUrunZaman.Items[cbUrunZaman.ItemIndex];

    // Mod'a göre SQL sorgusunu hazırla
    if aktifModUrun == 'yillik'
    {
      Qry = Clomosy.DBSQLServerQueryWith(
        'SELECT YEAR(Orders.OrderDate) AS Period, SUM(OrderItems.Quantity) AS Total ' +
        'FROM Orders ' +
        'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
        'WHERE OrderItems.ProductId = ''' + UrunId + ''' ' +
        'GROUP BY YEAR(Orders.OrderDate) ' +
        'ORDER BY Period'
      );
    }
    else if aktifModUrun == 'aylik'
    {
      Qry = Clomosy.DBSQLServerQueryWith(
        'SELECT FORMAT(Orders.OrderDate, ''MM'') AS Period, SUM(OrderItems.Quantity) AS Total ' +
        'FROM Orders ' +
        'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
        'WHERE OrderItems.ProductId = ''' + UrunId + ''' ' +
        'AND YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
        'GROUP BY FORMAT(Orders.OrderDate, ''MM'') ' +
        'ORDER BY Period'
      );
    }
    else if aktifModUrun == 'haftalik'
    {
      Qry = Clomosy.DBSQLServerQueryWith(
        'SELECT DATEPART(WK, Orders.OrderDate) AS Period, SUM(OrderItems.Quantity) AS Total ' +
        'FROM Orders ' +
        'JOIN OrderItems ON Orders.OrderId = OrderItems.OrderId ' +
        'WHERE OrderItems.ProductId = ''' + UrunId + ''' ' +
        'AND YEAR(Orders.OrderDate) = ' + secilenYil + ' ' +
        'GROUP BY DATEPART(WK, Orders.OrderDate) ' +
        'ORDER BY Period'
      );
    }

    // Sorguyu çalıştır
    Qry.Open;

    if not Qry.IsEmpty
    {
      urunZamanChart.Visible = True;
      urunZamanChart.clLoadDataFromDataSet(Qry);

      if aktifModUrun == 'yillik'
        LblUrunZamanBaslik.Text = 'Yıllık Sipariş Sayısı';
      else if aktifModUrun == 'aylik'
        LblUrunZamanBaslik.Text = secilenYil + ' Aylık Sipariş Sayısı';
      else
        LblUrunZamanBaslik.Text = secilenYil + ' Haftalık Sipariş Sayısı';
    }
    else
    {
      ShowMessage('Grafik için veri bulunamadı.');
    }

    Qry.Free;
  }
  except
    ShowMessage('SQL Chart Hatası: ' + LastExceptionMessage);
  }
}

void SQL_UrunStokVerisi(UrunId: String)
var
  Qry : TclSQLQuery;
{
  try
  {
    if (UrunId == '')
    {
      ShowMessage('Ürün ID boş geldi.');
      Exit;
    }

    if (urunStokChart == nil)
    {
      ShowMessage('Stok grafiği tanımlı değil.');
      Exit;
    }

    Qry = Clomosy.DBSQLServerQueryWith(
      'SELECT ''Satılan Ürün'' AS Durum, ' +
      '(SELECT ISNULL(SUM(OrderItems.Quantity), 0) ' +
      ' FROM OrderItems WHERE ProductId = ''' + UrunId + ''') AS Adet, ' +
      '''clwhite'' AS color ' +
      'UNION ALL ' +
      'SELECT ''Stokta Kalan'', Quantity, ''clYellowGreen'' ' +
      'FROM Stock WHERE ProductId = ''' + UrunId + ''' AND Quantity > 0'
    );

    Qry.Open;

    if not Qry.IsEmpty
    {
      LblUrunStokBaslik.Text = listToplamUrun.clSelectedItemData(clCaption) + ' Ürünü Satış-Stok Sayıları';
      urunStokChart.Visible = True;
      urunStokChart.Charttype = clCPie;
      urunStokChart.XAxisText = 'Durum';
      urunStokChart.ChartItemsValue = 'Adet';
      urunStokChart.clLoadDataFromDataSet(Qry);
    }
    else
    {
      ShowMessage('Stok verisi bulunamadı.');
    }

    Qry.Free;
  }
  except
    ShowMessage('Stok SQL Hatası: ' + LastExceptionMessage);
  }
}


void UrunChartGorunumGeri
{
  if aktifModUrun == 'yillik'
    aktifModUrun = 'haftalik';
  else if aktifModUrun == 'haftalik'
    aktifModUrun = 'aylik';
  else if aktifModUrun == 'aylik'
    aktifModUrun = 'yillik';

  seciliUrunId = listToplamUrun.clSelectedItemData(clText1);
  SQL_UrunSatisVerisi(seciliUrunId);
}


void UrunChartGorunumIleri
{
  if aktifModUrun == 'yillik'
    aktifModUrun = 'aylik';
  else if aktifModUrun == 'aylik'
    aktifModUrun = 'haftalik';
  else if aktifModUrun == 'haftalik'
    aktifModUrun = 'yillik';

  seciliUrunId = listToplamUrun.clSelectedItemData(clText1);
  SQL_UrunSatisVerisi(seciliUrunId);
}

// Seçilen ürünle ilgili grafikleri açar
void UrunPanelAcilis
{
  PnlUrunStok.Visible = False;
  PnlUrunChart.Visible = True;
  PnlUrunStokChart.Visible = True;
  seciliUrunId = listToplamUrun.clSelectedItemData(clText1);
  SQL_UrunSatisVerisi(seciliUrunId);
  SQL_UrunStokVerisi(seciliUrunId); 
}


void UrunPanelKapat
{
  PnlUrunStok.Visible = True;
  PnlUrunChart.Visible = False;
  PnlUrunStokChart.Visible = False;
}

// Ürün filtreleme panelini açar/kapatır
void filterPanelAcKapa
{
  if(pnl_Chk.Visible == False)
  {
    pnl_Chk.Visible = True;
    clRTMethod(pnl_Chk, 'BringToFront');
  }
  else
  {
    pnl_Chk.Visible = False;
    SQL_ToplamUrunler;
  }
}


void filterPanelAcKapa2
{
  if(pnl_Chk2.Visible == False)
  {
    pnl_Chk2.Visible = True;
    clRTMethod(pnl_Chk2, 'BringToFront');
  }
  else
  {
    pnl_Chk2.Visible = False;
    SQL_UrunStok;
  }
}

//Panellerin boyutunu ayarlar
void P2_OnPageResize;
{
  PnlToplamUrun.Width = (PnlPage2.Width * 42) / 100; //650
  PnlPage2Sag.Width = (PnlPage2.Width * 42) / 100; //650
  PnlToplamUrun.Height = PnlPage2.Height; 
  PnlPage2Sag.Height = PnlPage2.Height ; 
}

//Mobil ise ScrollBox masaüstü ise tek panelde görünüm
void P2_isMobile
var
  isMobile : Boolean;
  marginDeger : Integer;
{
  marginDeger = 20;
  isMobile = Clomosy.PlatformIsMobile;
  
  if isMobile
  {
    Page2_ScrollBox = MyForm.AddNewVertScrollBox(PnlPage2,'Page2_ScrollBox');
    Page2_ScrollBox.Align = alClient;
    Page2_ScrollBox.ShowScrollBars = True;
    
    PnlToplamUrun = MyForm.AddNewProPanel(Page2_ScrollBox, 'PnlToplamUrun');
    PnlToplamUrun.Align = alTop;
    PnlToplamUrun.Height = 500;
    PnlToplamUrun.Margins.Right = 20;
    PnlToplamUrun.Margins.Left = 20;
    PnlToplamUrun.Margins.Top = 20; 
    PnlToplamUrun.Margins.Bottom = 20; 
    PnlToplamUrun.clProSettings.RoundHeight = 10;
    PnlToplamUrun.clProSettings.RoundWidth = 10;
    PnlToplamUrun.clProSettings.BackgroundColor = clAlphaColor.clHexToColor('renk_listBG');
    PnlToplamUrun.clProSettings.BorderColor = clAlphaColor.clHexToColor('renk_listBG');
    PnlToplamUrun.SetclProSettings(PnlToplamUrun.clProSettings);  
    
    PnlPage2Sag = MyForm.AddNewProPanel(Page2_ScrollBox,'PnlPage2Sag');
    PnlPage2Sag.Align = alTop;
    PnlPage2Sag.Height = 800;
    PnlPage2Sag.Margins.Left = 20;
    PnlPage2Sag.Margins.Right = 20;
    PnlPage2Sag.Margins.Bottom = 50;
  }
  else
  {
    PnlToplamUrun = MyForm.AddNewProPanel(PnlPage2, 'PnlToplamUrun');
    PnlToplamUrun.Align = alLeft;
    PnlToplamUrun.Width = 650;
    PnlToplamUrun.Margins.Left = 100;
    PnlToplamUrun.Margins.Top = 20; 
    PnlToplamUrun.Margins.Bottom = 40; 
    PnlToplamUrun.clProSettings.RoundHeight = 10;
    PnlToplamUrun.clProSettings.RoundWidth = 10;
    PnlToplamUrun.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamUrun.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listBG);
    PnlToplamUrun.SetclProSettings(PnlToplamUrun.clProSettings);  
    
    PnlPage2Sag = MyForm.AddNewProPanel(PnlPage2,'PnlPage2Sag');
    PnlPage2Sag.Align = alRight;
    PnlPage2Sag.Width = 650;
    PnlPage2Sag.Margins.Right = 100;
    PnlPage2Sag.Margins.Top = 20; 
    PnlPage2Sag.Margins.Bottom = 40;
  }
}


void Page2
{
  PnlPage2 = MyForm.AddNewProPanel(clPageControl.PageContainers[2],'Page2');
  PnlPage2.Align = alClient;
  PnlPage2.clProSettings.IsTransparent = True;
  PnlPage2.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage2.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_formBG);
  PnlPage2.clProSettings.BorderWidth = 2;
  PnlPage2.SetclProSettings(PnlPage2.clProSettings);
  
  PnlPage2.OnResize = 'P2_OnPageResize';
  P2_isMobile;
  
  LblSatilanBaslik = MyForm.AddNewProLabel(PnlToplamUrun, 'LblSatilanBaslik', 'Satılanlar');
  LblSatilanBaslik.Align = alMostTop;
  LblSatilanBaslik.Height = 30;
  LblSatilanBaslik.Margins.Left = 7;
  LblSatilanBaslik.Margins.Top = 5;
  LblSatilanBaslik.clProSettings.FontSize = 18;
  LblSatilanBaslik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblSatilanBaslik.clProSettings.TextSettings.Font.Style = [fsBold];
  LblSatilanBaslik.SetclProSettings(LblSatilanBaslik.clProSettings);

  pnlFiltre = MyForm.AddNewProPanel(PnlToplamUrun,'pnlFiltre');
  pnlFiltre.Align = alTop;
  pnlFiltre.Margins.Left =  5;
  pnlFiltre.Margins.Right =  15;
  
  BtnFilter = MyForm.AddNewProButton(pnlFiltre, 'BtnFilter', '');
  BtnFilter.Align = alLeft;
  BtnFilter.clProSettings.PictureSource = 'https://resmim.net/cdn/2025/07/23/XCBbBi.png';
  BtnFilter.SetclProSettings(BtnFilter.clProSettings);

  pnl_Chk = MyForm.AddNewProPanel(PnlToplamUrun, 'pnl_Chk');
  pnl_Chk.Height = 130;
  pnl_Chk.Margins.Right =  425;
  pnl_Chk.Margins.Bottom =  500;
  pnl_Chk.clProSettings.RoundHeight = 10;
  pnl_Chk.clProSettings.RoundWidth = 10;
  pnl_Chk.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_formBG);
  pnl_Chk.clProSettings.BorderColor = clAlphaColor.clHexToColor('#494E4C');
  pnl_Chk.clProSettings.BorderWidth = 1;
  pnl_Chk.SetclProSettings(pnl_Chk.clProSettings);  

  chkMamul = MyForm.AddNewCheckBox(pnl_Chk, 'chkMamul', 'Mamül');
  chkMamul.Align = alTop;
  chkMamul.Margins.Top = 10;
  chkMamul.Margins.Right = 10;
  chkMamul.Margins.Left = 10;
  chkMamul.Margins.Bottom = 10;
  chkMamul.isChecked  = True;
  
  chkYariMamul = MyForm.AddNewCheckBox(pnl_Chk, 'chkYariMamul', 'Yarı Mamül');
  chkYariMamul.Align = alTop;
  chkYariMamul.Margins.Top = 10;
  chkYariMamul.Margins.Right = 10;
  chkYariMamul.Margins.Left = 10;
  chkYariMamul.isChecked  = True;
  
  chkHammadde = MyForm.AddNewCheckBox(pnl_Chk, 'chkHammadde', 'Hammadde');
  chkHammadde.Align = alTop;
  chkHammadde.Margins.Top = 10;
  chkHammadde.Margins.Right = 10;
  chkHammadde.Margins.Left = 10;
  chkHammadde.isChecked  = True;
  
  searchEdt_ToplamUrun;
  ListOlustur_ToplamUrun;

  pnl_Chk.Visible = False;
  MyForm.AddNewEvent(BtnFilter,tbeOnClick,'filterPanelAcKapa');
  
  
  PnlUrunStok = MyForm.AddNewProPanel(PnlPage2Sag, 'PnlUrunStok');
  PnlUrunStok.Align = alClient;
  PnlUrunStok.clProSettings.RoundHeight = 10;
  PnlUrunStok.clProSettings.RoundWidth = 10;
  PnlUrunStok.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_listBG);
  PnlUrunStok.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_listBG);
  PnlUrunStok.SetclProSettings(PnlUrunStok.clProSettings); 
  
  LblStokBaslik = MyForm.AddNewProLabel(PnlUrunStok,'LblStokBaslik','Stokta olanlar');
  LblStokBaslik.Align = alMostTop;
  LblStokBaslik.Height = 30;
  LblStokBaslik.Margins.Left = 7;
  LblStokBaslik.Margins.Top = 5;
  LblStokBaslik.clProSettings.FontSize = 18;
  LblStokBaslik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblStokBaslik.clProSettings.TextSettings.Font.Style = [fsBold];
  LblStokBaslik.SetclProSettings(LblStokBaslik.clProSettings);
  
  pnlFiltre2 = MyForm.AddNewProPanel(PnlUrunStok,'pnlFiltre2');
  pnlFiltre2.Align = alTop;
  pnlFiltre2.Margins.Left =  5;
  pnlFiltre2.Margins.Right =  15;
  
  BtnFilter2 = MyForm.AddNewProButton(pnlFiltre2, 'BtnFilter2', '');
  BtnFilter2.Align = alLeft;
  BtnFilter2.clProSettings.PictureSource = 'https://resmim.net/cdn/2025/07/23/XCBbBi.png';
  BtnFilter2.SetclProSettings(BtnFilter2.clProSettings);
  
  pnl_Chk2 = MyForm.AddNewProPanel(PnlUrunStok, 'pnl_Chk2');
  pnl_Chk2.Height = 130;
  pnl_Chk2.Margins.Right = 425;
  pnl_Chk2.Margins.Bottom = 500;
  pnl_Chk2.clProSettings.RoundHeight = 10;
  pnl_Chk2.clProSettings.RoundWidth = 10;
  pnl_Chk2.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_formBG);
  pnl_Chk2.clProSettings.BorderColor = clAlphaColor.clHexToColor('#494E4C');
  pnl_Chk2.clProSettings.BorderWidth = 1;
  pnl_Chk2.SetclProSettings(pnl_Chk2.clProSettings);
  
  chkMamul2 = MyForm.AddNewCheckBox(pnl_Chk2, 'chkMamul2', 'Mamül');
  chkMamul2.Align = alTop;
  chkMamul2.Margins.Top = 10;
  chkMamul2.Margins.Right = 10;
  chkMamul2.Margins.Left = 10;
  chkMamul2.Margins.Bottom = 10;
  chkMamul2.isChecked = True;
  
  chkYariMamul2 = MyForm.AddNewCheckBox(pnl_Chk2, 'chkYariMamul2', 'Yarı Mamül');
  chkYariMamul2.Align = alTop;
  chkYariMamul2.Margins.Top = 10;
  chkYariMamul2.Margins.Right = 10;
  chkYariMamul2.Margins.Left = 10;
  chkYariMamul2.isChecked = True;
  
  chkHammadde2 = MyForm.AddNewCheckBox(pnl_Chk2, 'chkHammadde2', 'Hammadde');
  chkHammadde2.Align = alTop;
  chkHammadde2.Margins.Top = 10;
  chkHammadde2.Margins.Right = 10;
  chkHammadde2.Margins.Left = 10;
  chkHammadde2.isChecked = True;
    
  searchEdt_UrunStok;
  ListOlustur_UrunStok;
  
  pnl_Chk2.Visible = False;
  MyForm.AddNewEvent(BtnFilter2, tbeOnClick, 'filterPanelAcKapa2');

  
  PnlUrunChart = MyForm.AddNewProPanel(PnlPage2Sag, 'PnlUrunChart');
  PnlUrunChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P2G1);
  PnlUrunChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P2G1);
  PnlUrunChart.Align = alTop ;
  PnlUrunChart.Margins.Bottom = 50;
  PnlUrunChart.Height = 350;
  PnlUrunChart.clProSettings.BorderWidth = 2;
  PnlUrunChart.clProSettings.RoundHeight =10;
  PnlUrunChart.clProSettings.RoundWidth = 10;
  PnlUrunChart.SetclProSettings(PnlUrunChart.clProSettings);
  
  PnlUrunStokChart = MyForm.AddNewProPanel(PnlPage2Sag, 'PnlUrunStokChart');
  PnlUrunStokChart.Align = alBottom;
  PnlUrunStokChart.Height = 350;
  PnlUrunStokChart.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P2G2);
  PnlUrunStokChart.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P2G2);
  PnlUrunStokChart.clProSettings.BorderWidth = 2;
  PnlUrunStokChart.clProSettings.RoundWidth = 10;
  PnlUrunStokChart.clProSettings.RoundHeight = 10;
  PnlUrunStokChart.SetclProSettings(PnlUrunStokChart.clProSettings);
  
  urunStokChart = MyForm.AddNewChart(PnlUrunStokChart, 'urunStokChart', '');
  urunStokChart.Align = alClient;
  urunStokChart.Margins.Left = 5;
  urunStokChart.Margins.Right = 5;
  urunStokChart.Margins.Bottom = 5;
  urunStokChart.Margins.Top = 5;
  urunStokChart.Charttype = clCPie; 
  urunStokChart.ChartItemText = '';


  urunZamanChart = MyForm.AddNewChart(PnlUrunChart, 'urunZamanChart', '');
  urunZamanChart.Align = alClient;
  urunZamanChart.Margins.Left = 5;
  urunZamanChart.Margins.Right = 5;
  urunZamanChart.Margins.Bottom = 5;
  urunZamanChart.Charttype = clCLine;
  urunZamanChart.XAxisText = 'Period';
  urunZamanChart.ChartItemText = 'Ürün';
  urunZamanChart.ChartItemsValue = 'Total';
  
  LblUrunStokBaslik = MyForm.AddNewProLabel(urunStokChart, 'LblUrunStokBaslik', '');
  LblUrunStokBaslik.Align = alTop;
  LblUrunStokBaslik.Height = 30;
  LblUrunStokBaslik.Width = 350;
  LblUrunStokBaslik.Margins.Bottom = 4;
  LblUrunStokBaslik.clProSettings.FontHorzAlign = palcenter;
  LblUrunStokBaslik.clProSettings.FontSize = 18;
  LblUrunStokBaslik.clProSettings.TextSettings.Font.Style = [fsBold];
  LblUrunStokBaslik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblUrunStokBaslik.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P2G2);
  LblUrunStokBaslik.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P2G2);
  LblUrunStokBaslik.clProSettings.BorderWidth = 2;
  LblUrunStokBaslik.SetclProSettings(LblUrunStokBaslik.clProSettings);
  
  clRTMethod(LblUrunStokBaslik, 'BringToFront');
  
  LblUrunZamanBaslik = MyForm.AddNewProLabel(urunZamanChart, 'LblUrunZamanBaslik', '');
  LblUrunZamanBaslik.Align = alTop;
  LblUrunZamanBaslik.Height = 30;
  LblUrunZamanBaslik.Width = 350;
  LblUrunZamanBaslik.Margins.Bottom = 4;
  LblUrunZamanBaslik.clProSettings.FontHorzAlign = palcenter;
  LblUrunZamanBaslik.clProSettings.FontSize = 18;
  LblUrunZamanBaslik.clProSettings.TextSettings.Font.Style = [fsBold];
  LblUrunZamanBaslik.clProSettings.FontColor = clAlphaColor.clHexToColor('#ffffff');
  LblUrunZamanBaslik.clProSettings.BackgroundColor = clAlphaColor.clHexToColor(renk_P2G1);
  LblUrunZamanBaslik.clProSettings.BorderColor = clAlphaColor.clHexToColor(renk_P2G1);
  LblUrunZamanBaslik.clProSettings.BorderWidth = 2;
  LblUrunZamanBaslik.SetclProSettings(LblUrunZamanBaslik.clProSettings);

  clRTMethod(LblUrunZamanBaslik,'BringTofront');
  PnlBtnUrun = MyForm.AddNewProPanel(PnlUrunChart,'PnlBtnUrun');
  PnlBtnUrun.Align = alTop;
  PnlBtnUrun.Height = 40;
  PnlBtnUrun.Width = 60;

  BtnUrunLeft = MyForm.AddNewProButton(PnlBtnUrun, 'BtnUrunLeft', '');
  BtnUrunLeft.clProSettings.PictureSource = 'https://resmim.net/cdn/2025/07/21/XXLlxQ.png';
  BtnUrunLeft.Align = alCenter;
  BtnUrunLeft.Margins.Right = 50;
  BtnUrunLeft.Margins.Top = 4;
  BtnUrunLeft.Margins.Bottom = 5;
  BtnUrunLeft.SetclProSettings(BtnUrunLeft.clProSettings);
  
  BtnUrunRight = MyForm.AddNewProButton(PnlBtnUrun, 'BtnUrunRight', '');
  BtnUrunRight.clProSettings.PictureSource = 'https://resmim.net/cdn/2025/07/21/XXLk8M.png';
  BtnUrunRight.Align = alCenter;
  BtnUrunRight.Margins.Left = 50;
  BtnUrunRight.Margins.Top = 4;
  BtnUrunRight.Margins.Bottom = 5;
  BtnUrunRight.SetclProSettings(BtnUrunRight.clProSettings);
  
  BtnUrunKapat = MyForm.AddNewProButton(PnlBtnUrun, 'BtnUrunKapat', '');
  BtnUrunKapat.Align = alRight;
  BtnUrunKapat.Margins.Top = 5;
  BtnUrunKapat.Margins.Bottom = 5;
  BtnUrunKapat.clProSettings.PictureSource = 'https://resmim.net/cdn/2025/07/21/XXLTRT.png';
  BtnUrunKapat.SetclProSettings(BtnUrunKapat.clProSettings);
  
  
  MyForm.AddNewEvent(BtnUrunKapat,tbeOnClick,'UrunPanelKapat');
  MyForm.AddNewEvent(BtnUrunLeft,tbeOnClick,'UrunChartGorunumGeri');
  MyForm.AddNewEvent(BtnUrunRight,tbeOnClick,'UrunChartGorunumIleri');
  aktifModUrun = 'aylik';
 
  PnlUrunStokChart.Visible = False;
  PnlUrunChart.Visible = False;
  P2_CBUrun_YilAta;
  
  MyForm.AddNewEvent(cbUrunZaman, tbeOnChange, 'UrunPanelAcilis');
  MyForm.AddNewEvent(listToplamUrun,tbeOnItemClick,'UrunPanelAcilis');
}


//////////////////////////////////////MAIN////////////////////////////////////////////

//Periyodik güncelleme için fonksiyon
void refreshPages
{
  Page0;
  Page1;
  Page2;
}


{
  // Ana form
  MyForm = TCLForm.Create(Self);
  MyForm.LytTopBar.Visible = False;
  MyForm.clSetWindowState(fwsMaximized); // Tam ekran başlat
  MyForm.SetFormColor('#ffffff','#000000',clGCross); // Tema rengi ayarlanıyor

  //Server Bağlantısı
  Qry = TclSqlQuery.Create(nil);
  // Clomosy.DBSQLServerConnect(ProviderName, ServerName, UserName, UserPassword, DatabaseName:String; Port:Integer=1433) :
  Clomosy.DBSQLServerConnect('SQL Server', ' ', ' ', ' ', ' ', 1433);
  Qry.Connection = Clomosy.DBSQLServerConnection;

  // Sayfa kontrol nesnesi 
  clPageControl = MyForm.AddNewPageControl(MyForm,'clPageControl');
  clPageControl.Align = alClient;
  clPageControl.Tabsize.spacing = 2;

  // 3 sayfa oluşturuluyor
  clPageControlContainer = clPageControl.AddContainer;
  clPageControlContainer = clPageControl.AddContainer;

  clPageControl.Pages[0].Text = 'Genel Bakış';
  clPageControl.Pages[1].Text = 'Müşteri Analizi';
  clPageControl.Pages[2].Text = 'Ürün Analizi';
  clPageControl.Tabsize.Mode = tsmAutoTabSize;
  clPageControl.Tabsize.spacing = 2;

  // Temada kullanılacak renk tanımları 
  renk_formBG = '#e6f4ef';       // Form arka planı
  renk_listBG = '#008c67 ';      // Liste arka planı
  renk_listkart = '#ffffff';     // Liste kart rengi

  // Page0 - Genel Bakış grafik ve bilgi alanı renkleri
  renk_P0G1 = '#008c67'; // Sol alt: aylık satış grafiği
  renk_P0G2 = '#008c67'; // Orta üst: bölgesel analiz grafiği
  renk_P0G3 = '#008c67'; // Orta alt: aylık sipariş sayısı
  renk_P0B1 = '#008c67'; // Sağ bilgi panelleri
  renk_P0Y = '#ffffff';

  // Page1 - Müşteri Analizi renkleri
  renk_P1G1 = '#008c67'; // Sağ üst: aktif müşteri sayısı
  renk_P1B1 = '#008c67'; // Sağ alt: bilgi panelleri

  // Page2 - Ürün Analizi renkleri
  renk_P2G1 = '#008c67'; // Sağ üst: ürün sipariş sayısı
  renk_P2G2 = '#008c67'; // Sağ alt: satış ve stok karşılaştırma


  // Sayfalar başlatılıyor
  Page0;
  Page1;
  Page2;

  // Otomatik yenileme için timer  (1 saatte bir sayfaları yeniler)
  refreshTimer = MyForm.AddNewTimer(MyForm, 'refreshTimer', 3600000);
  MyForm.AddNewEvent(refreshTimer, tbeOnTimer, 'refreshPages');

  MyForm.Run;
}